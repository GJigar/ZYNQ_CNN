// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "pool.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic pool::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic pool::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> pool::ap_ST_fsm_state1 = "1";
const sc_lv<9> pool::ap_ST_fsm_state2 = "10";
const sc_lv<9> pool::ap_ST_fsm_state3 = "100";
const sc_lv<9> pool::ap_ST_fsm_state4 = "1000";
const sc_lv<9> pool::ap_ST_fsm_state5 = "10000";
const sc_lv<9> pool::ap_ST_fsm_state6 = "100000";
const sc_lv<9> pool::ap_ST_fsm_state7 = "1000000";
const sc_lv<9> pool::ap_ST_fsm_state8 = "10000000";
const sc_lv<9> pool::ap_ST_fsm_state9 = "100000000";
const sc_lv<32> pool::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> pool::ap_const_lv32_1 = "1";
const sc_lv<1> pool::ap_const_lv1_0 = "0";
const sc_lv<32> pool::ap_const_lv32_2 = "10";
const sc_lv<32> pool::ap_const_lv32_3 = "11";
const sc_lv<32> pool::ap_const_lv32_4 = "100";
const sc_lv<32> pool::ap_const_lv32_5 = "101";
const sc_lv<32> pool::ap_const_lv32_6 = "110";
const sc_lv<32> pool::ap_const_lv32_7 = "111";
const sc_lv<3> pool::ap_const_lv3_0 = "000";
const sc_lv<1> pool::ap_const_lv1_1 = "1";
const sc_lv<2> pool::ap_const_lv2_0 = "00";
const sc_lv<32> pool::ap_const_lv32_8 = "1000";
const sc_lv<12> pool::ap_const_lv12_64 = "1100100";
const sc_lv<10> pool::ap_const_lv10_19 = "11001";
const sc_lv<3> pool::ap_const_lv3_5 = "101";
const sc_lv<3> pool::ap_const_lv3_1 = "1";
const sc_lv<2> pool::ap_const_lv2_2 = "10";
const sc_lv<2> pool::ap_const_lv2_1 = "1";
const sc_lv<5> pool::ap_const_lv5_4 = "100";
const bool pool::ap_const_boolean_1 = true;

pool::pool(sc_module_name name) : sc_module(name), mVcdFile(0) {
    my_net_hcmp_16ns_eOg_U26 = new my_net_hcmp_16ns_eOg<1,2,16,16,1>("my_net_hcmp_16ns_eOg_U26");
    my_net_hcmp_16ns_eOg_U26->clk(ap_clk);
    my_net_hcmp_16ns_eOg_U26->reset(ap_rst);
    my_net_hcmp_16ns_eOg_U26->din0(empty_13_reg_132);
    my_net_hcmp_16ns_eOg_U26->din1(input_r_q0);
    my_net_hcmp_16ns_eOg_U26->ce(ap_var_for_const0);
    my_net_hcmp_16ns_eOg_U26->opcode(ap_var_for_const1);
    my_net_hcmp_16ns_eOg_U26->dout(grp_fu_155_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln30_2_fu_241_p2);
    sensitive << ( zext_ln30_reg_430 );
    sensitive << ( tmp_fu_233_p3 );

    SC_METHOD(thread_add_ln30_3_fu_268_p2);
    sensitive << ( i_0_cast8_reg_412 );
    sensitive << ( zext_ln29_fu_217_p1 );

    SC_METHOD(thread_add_ln30_4_fu_258_p2);
    sensitive << ( mul_ln30_reg_401 );
    sensitive << ( zext_ln30_10_fu_254_p1 );

    SC_METHOD(thread_add_ln30_5_fu_286_p2);
    sensitive << ( mul_ln30_2_reg_407 );
    sensitive << ( zext_ln30_12_fu_282_p1 );

    SC_METHOD(thread_add_ln30_fu_277_p2);
    sensitive << ( shl_ln30_6_reg_435 );
    sensitive << ( zext_ln30_7_fu_273_p1 );

    SC_METHOD(thread_add_ln33_2_fu_375_p2);
    sensitive << ( add_ln33_3_reg_481 );
    sensitive << ( zext_ln33_3_fu_371_p1 );

    SC_METHOD(thread_add_ln33_3_fu_344_p2);
    sensitive << ( zext_ln33_fu_340_p1 );
    sensitive << ( shl_ln33_3_fu_324_p3 );

    SC_METHOD(thread_add_ln33_4_fu_366_p2);
    sensitive << ( shl_ln33_2_reg_468 );
    sensitive << ( zext_ln32_fu_350_p1 );

    SC_METHOD(thread_add_ln33_5_fu_384_p2);
    sensitive << ( mul_ln30_reg_401 );
    sensitive << ( zext_ln33_4_fu_380_p1 );

    SC_METHOD(thread_add_ln33_fu_319_p2);
    sensitive << ( shl_ln30_5_reg_425 );
    sensitive << ( zext_ln31_fu_303_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln28_fu_185_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln28_fu_185_p2 );

    SC_METHOD(thread_i_0_cast8_fu_181_p1);
    sensitive << ( i_0_reg_87 );

    SC_METHOD(thread_i_fu_191_p2);
    sensitive << ( i_0_reg_87 );

    SC_METHOD(thread_icmp_ln28_fu_185_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_87 );

    SC_METHOD(thread_icmp_ln29_fu_221_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_99 );

    SC_METHOD(thread_icmp_ln31_fu_307_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( k_0_reg_121 );

    SC_METHOD(thread_icmp_ln32_fu_354_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( m_0_reg_144 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln30_11_fu_263_p1 );
    sensitive << ( zext_ln33_5_fu_389_p1 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_j_fu_227_p2);
    sensitive << ( j_0_reg_99 );

    SC_METHOD(thread_k_fu_313_p2);
    sensitive << ( k_0_reg_121 );

    SC_METHOD(thread_m_fu_360_p2);
    sensitive << ( m_0_reg_144 );

    SC_METHOD(thread_mul_ln30_2_fu_175_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( mul_ln30_2_fu_175_p00 );

    SC_METHOD(thread_mul_ln30_2_fu_175_p00);
    sensitive << ( input_offset );

    SC_METHOD(thread_mul_ln30_2_fu_175_p2);
    sensitive << ( mul_ln30_2_fu_175_p0 );

    SC_METHOD(thread_mul_ln30_fu_169_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( mul_ln30_fu_169_p00 );

    SC_METHOD(thread_mul_ln30_fu_169_p00);
    sensitive << ( input_offset );

    SC_METHOD(thread_mul_ln30_fu_169_p2);
    sensitive << ( mul_ln30_fu_169_p0 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( output_addr_reg_463 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln30_13_fu_291_p1 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( input_r_q0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( select_ln33_reg_505 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_select_ln33_fu_394_p3);
    sensitive << ( input_load_1_reg_499 );
    sensitive << ( empty_13_reg_132 );
    sensitive << ( grp_fu_155_p2 );

    SC_METHOD(thread_shl_ln30_5_fu_197_p3);
    sensitive << ( i_0_reg_87 );

    SC_METHOD(thread_shl_ln30_6_fu_209_p3);
    sensitive << ( i_0_reg_87 );

    SC_METHOD(thread_shl_ln33_2_fu_295_p3);
    sensitive << ( j_0_reg_99 );

    SC_METHOD(thread_shl_ln33_3_fu_324_p3);
    sensitive << ( add_ln33_fu_319_p2 );

    SC_METHOD(thread_shl_ln33_4_fu_332_p3);
    sensitive << ( add_ln33_fu_319_p2 );

    SC_METHOD(thread_shl_ln_fu_246_p3);
    sensitive << ( add_ln30_2_fu_241_p2 );

    SC_METHOD(thread_tmp_fu_233_p3);
    sensitive << ( i_0_reg_87 );
    sensitive << ( j_0_reg_99 );

    SC_METHOD(thread_zext_ln29_fu_217_p1);
    sensitive << ( j_0_reg_99 );

    SC_METHOD(thread_zext_ln30_10_fu_254_p1);
    sensitive << ( shl_ln_fu_246_p3 );

    SC_METHOD(thread_zext_ln30_11_fu_263_p1);
    sensitive << ( add_ln30_4_fu_258_p2 );

    SC_METHOD(thread_zext_ln30_12_fu_282_p1);
    sensitive << ( add_ln30_fu_277_p2 );

    SC_METHOD(thread_zext_ln30_13_fu_291_p1);
    sensitive << ( add_ln30_5_reg_453 );

    SC_METHOD(thread_zext_ln30_7_fu_273_p1);
    sensitive << ( add_ln30_3_fu_268_p2 );

    SC_METHOD(thread_zext_ln30_fu_205_p1);
    sensitive << ( shl_ln30_5_fu_197_p3 );

    SC_METHOD(thread_zext_ln31_fu_303_p1);
    sensitive << ( k_0_reg_121 );

    SC_METHOD(thread_zext_ln32_fu_350_p1);
    sensitive << ( m_0_reg_144 );

    SC_METHOD(thread_zext_ln33_3_fu_371_p1);
    sensitive << ( add_ln33_4_fu_366_p2 );

    SC_METHOD(thread_zext_ln33_4_fu_380_p1);
    sensitive << ( add_ln33_2_fu_375_p2 );

    SC_METHOD(thread_zext_ln33_5_fu_389_p1);
    sensitive << ( add_ln33_5_fu_384_p2 );

    SC_METHOD(thread_zext_ln33_fu_340_p1);
    sensitive << ( shl_ln33_4_fu_332_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln28_fu_185_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln29_fu_221_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln31_fu_307_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln32_fu_354_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pool_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, input_offset, "(port)input_offset");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, mul_ln30_fu_169_p2, "mul_ln30_fu_169_p2");
    sc_trace(mVcdFile, mul_ln30_reg_401, "mul_ln30_reg_401");
    sc_trace(mVcdFile, mul_ln30_2_fu_175_p2, "mul_ln30_2_fu_175_p2");
    sc_trace(mVcdFile, mul_ln30_2_reg_407, "mul_ln30_2_reg_407");
    sc_trace(mVcdFile, i_0_cast8_fu_181_p1, "i_0_cast8_fu_181_p1");
    sc_trace(mVcdFile, i_0_cast8_reg_412, "i_0_cast8_reg_412");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_fu_191_p2, "i_fu_191_p2");
    sc_trace(mVcdFile, i_reg_420, "i_reg_420");
    sc_trace(mVcdFile, shl_ln30_5_fu_197_p3, "shl_ln30_5_fu_197_p3");
    sc_trace(mVcdFile, shl_ln30_5_reg_425, "shl_ln30_5_reg_425");
    sc_trace(mVcdFile, icmp_ln28_fu_185_p2, "icmp_ln28_fu_185_p2");
    sc_trace(mVcdFile, zext_ln30_fu_205_p1, "zext_ln30_fu_205_p1");
    sc_trace(mVcdFile, zext_ln30_reg_430, "zext_ln30_reg_430");
    sc_trace(mVcdFile, shl_ln30_6_fu_209_p3, "shl_ln30_6_fu_209_p3");
    sc_trace(mVcdFile, shl_ln30_6_reg_435, "shl_ln30_6_reg_435");
    sc_trace(mVcdFile, j_fu_227_p2, "j_fu_227_p2");
    sc_trace(mVcdFile, j_reg_443, "j_reg_443");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln29_fu_221_p2, "icmp_ln29_fu_221_p2");
    sc_trace(mVcdFile, add_ln30_5_fu_286_p2, "add_ln30_5_fu_286_p2");
    sc_trace(mVcdFile, add_ln30_5_reg_453, "add_ln30_5_reg_453");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, output_addr_reg_463, "output_addr_reg_463");
    sc_trace(mVcdFile, shl_ln33_2_fu_295_p3, "shl_ln33_2_fu_295_p3");
    sc_trace(mVcdFile, shl_ln33_2_reg_468, "shl_ln33_2_reg_468");
    sc_trace(mVcdFile, k_fu_313_p2, "k_fu_313_p2");
    sc_trace(mVcdFile, k_reg_476, "k_reg_476");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, add_ln33_3_fu_344_p2, "add_ln33_3_fu_344_p2");
    sc_trace(mVcdFile, add_ln33_3_reg_481, "add_ln33_3_reg_481");
    sc_trace(mVcdFile, icmp_ln31_fu_307_p2, "icmp_ln31_fu_307_p2");
    sc_trace(mVcdFile, m_fu_360_p2, "m_fu_360_p2");
    sc_trace(mVcdFile, m_reg_489, "m_reg_489");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, icmp_ln32_fu_354_p2, "icmp_ln32_fu_354_p2");
    sc_trace(mVcdFile, input_load_1_reg_499, "input_load_1_reg_499");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, select_ln33_fu_394_p3, "select_ln33_fu_394_p3");
    sc_trace(mVcdFile, select_ln33_reg_505, "select_ln33_reg_505");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, i_0_reg_87, "i_0_reg_87");
    sc_trace(mVcdFile, j_0_reg_99, "j_0_reg_99");
    sc_trace(mVcdFile, empty_11_reg_111, "empty_11_reg_111");
    sc_trace(mVcdFile, k_0_reg_121, "k_0_reg_121");
    sc_trace(mVcdFile, empty_13_reg_132, "empty_13_reg_132");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, m_0_reg_144, "m_0_reg_144");
    sc_trace(mVcdFile, zext_ln30_11_fu_263_p1, "zext_ln30_11_fu_263_p1");
    sc_trace(mVcdFile, zext_ln30_13_fu_291_p1, "zext_ln30_13_fu_291_p1");
    sc_trace(mVcdFile, zext_ln33_5_fu_389_p1, "zext_ln33_5_fu_389_p1");
    sc_trace(mVcdFile, mul_ln30_fu_169_p0, "mul_ln30_fu_169_p0");
    sc_trace(mVcdFile, mul_ln30_2_fu_175_p0, "mul_ln30_2_fu_175_p0");
    sc_trace(mVcdFile, tmp_fu_233_p3, "tmp_fu_233_p3");
    sc_trace(mVcdFile, add_ln30_2_fu_241_p2, "add_ln30_2_fu_241_p2");
    sc_trace(mVcdFile, shl_ln_fu_246_p3, "shl_ln_fu_246_p3");
    sc_trace(mVcdFile, zext_ln30_10_fu_254_p1, "zext_ln30_10_fu_254_p1");
    sc_trace(mVcdFile, add_ln30_4_fu_258_p2, "add_ln30_4_fu_258_p2");
    sc_trace(mVcdFile, zext_ln29_fu_217_p1, "zext_ln29_fu_217_p1");
    sc_trace(mVcdFile, add_ln30_3_fu_268_p2, "add_ln30_3_fu_268_p2");
    sc_trace(mVcdFile, zext_ln30_7_fu_273_p1, "zext_ln30_7_fu_273_p1");
    sc_trace(mVcdFile, add_ln30_fu_277_p2, "add_ln30_fu_277_p2");
    sc_trace(mVcdFile, zext_ln30_12_fu_282_p1, "zext_ln30_12_fu_282_p1");
    sc_trace(mVcdFile, zext_ln31_fu_303_p1, "zext_ln31_fu_303_p1");
    sc_trace(mVcdFile, add_ln33_fu_319_p2, "add_ln33_fu_319_p2");
    sc_trace(mVcdFile, shl_ln33_4_fu_332_p3, "shl_ln33_4_fu_332_p3");
    sc_trace(mVcdFile, zext_ln33_fu_340_p1, "zext_ln33_fu_340_p1");
    sc_trace(mVcdFile, shl_ln33_3_fu_324_p3, "shl_ln33_3_fu_324_p3");
    sc_trace(mVcdFile, zext_ln32_fu_350_p1, "zext_ln32_fu_350_p1");
    sc_trace(mVcdFile, add_ln33_4_fu_366_p2, "add_ln33_4_fu_366_p2");
    sc_trace(mVcdFile, zext_ln33_3_fu_371_p1, "zext_ln33_3_fu_371_p1");
    sc_trace(mVcdFile, add_ln33_2_fu_375_p2, "add_ln33_2_fu_375_p2");
    sc_trace(mVcdFile, zext_ln33_4_fu_380_p1, "zext_ln33_4_fu_380_p1");
    sc_trace(mVcdFile, add_ln33_5_fu_384_p2, "add_ln33_5_fu_384_p2");
    sc_trace(mVcdFile, grp_fu_155_p2, "grp_fu_155_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, mul_ln30_2_fu_175_p00, "mul_ln30_2_fu_175_p00");
    sc_trace(mVcdFile, mul_ln30_fu_169_p00, "mul_ln30_fu_169_p00");
#endif

    }
}

pool::~pool() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete my_net_hcmp_16ns_eOg_U26;
}

void pool::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void pool::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv5_4;
}

void pool::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(icmp_ln32_fu_354_p2.read(), ap_const_lv1_1))) {
        empty_11_reg_111 = empty_13_reg_132.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        empty_11_reg_111 = input_r_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_fu_307_p2.read()))) {
        empty_13_reg_132 = empty_11_reg_111.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        empty_13_reg_132 = select_ln33_reg_505.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln29_fu_221_p2.read(), ap_const_lv1_1))) {
        i_0_reg_87 = i_reg_420.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_87 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln31_fu_307_p2.read(), ap_const_lv1_1))) {
        j_0_reg_99 = j_reg_443.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln28_fu_185_p2.read(), ap_const_lv1_0))) {
        j_0_reg_99 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(icmp_ln32_fu_354_p2.read(), ap_const_lv1_1))) {
        k_0_reg_121 = k_reg_476.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        k_0_reg_121 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_fu_307_p2.read()))) {
        m_0_reg_144 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        m_0_reg_144 = m_reg_489.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln29_fu_221_p2.read()))) {
        add_ln30_5_reg_453 = add_ln30_5_fu_286_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_fu_307_p2.read()))) {
        add_ln33_3_reg_481 = add_ln33_3_fu_344_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_0_cast8_reg_412 = i_0_cast8_fu_181_p1.read();
        i_reg_420 = i_fu_191_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        input_load_1_reg_499 = input_r_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_443 = j_fu_227_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        k_reg_476 = k_fu_313_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        m_reg_489 = m_fu_360_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        mul_ln30_2_reg_407 = mul_ln30_2_fu_175_p2.read();
        mul_ln30_reg_401 = mul_ln30_fu_169_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        output_addr_reg_463 =  (sc_lv<10>) (zext_ln30_13_fu_291_p1.read());
        shl_ln33_2_reg_468 = shl_ln33_2_fu_295_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        select_ln33_reg_505 = select_ln33_fu_394_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln28_fu_185_p2.read(), ap_const_lv1_0))) {
        shl_ln30_5_reg_425 = shl_ln30_5_fu_197_p3.read();
        shl_ln30_6_reg_435 = shl_ln30_6_fu_209_p3.read();
        zext_ln30_reg_430 = zext_ln30_fu_205_p1.read();
    }
}

void pool::thread_add_ln30_2_fu_241_p2() {
    add_ln30_2_fu_241_p2 = (!tmp_fu_233_p3.read().is_01() || !zext_ln30_reg_430.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_fu_233_p3.read()) + sc_biguint<6>(zext_ln30_reg_430.read()));
}

void pool::thread_add_ln30_3_fu_268_p2() {
    add_ln30_3_fu_268_p2 = (!i_0_cast8_reg_412.read().is_01() || !zext_ln29_fu_217_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(i_0_cast8_reg_412.read()) + sc_biguint<4>(zext_ln29_fu_217_p1.read()));
}

void pool::thread_add_ln30_4_fu_258_p2() {
    add_ln30_4_fu_258_p2 = (!zext_ln30_10_fu_254_p1.read().is_01() || !mul_ln30_reg_401.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln30_10_fu_254_p1.read()) + sc_biguint<12>(mul_ln30_reg_401.read()));
}

void pool::thread_add_ln30_5_fu_286_p2() {
    add_ln30_5_fu_286_p2 = (!zext_ln30_12_fu_282_p1.read().is_01() || !mul_ln30_2_reg_407.read().is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln30_12_fu_282_p1.read()) + sc_biguint<10>(mul_ln30_2_reg_407.read()));
}

void pool::thread_add_ln30_fu_277_p2() {
    add_ln30_fu_277_p2 = (!zext_ln30_7_fu_273_p1.read().is_01() || !shl_ln30_6_reg_435.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln30_7_fu_273_p1.read()) + sc_biguint<5>(shl_ln30_6_reg_435.read()));
}

void pool::thread_add_ln33_2_fu_375_p2() {
    add_ln33_2_fu_375_p2 = (!add_ln33_3_reg_481.read().is_01() || !zext_ln33_3_fu_371_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(add_ln33_3_reg_481.read()) + sc_biguint<7>(zext_ln33_3_fu_371_p1.read()));
}

void pool::thread_add_ln33_3_fu_344_p2() {
    add_ln33_3_fu_344_p2 = (!zext_ln33_fu_340_p1.read().is_01() || !shl_ln33_3_fu_324_p3.read().is_01())? sc_lv<7>(): (sc_biguint<7>(zext_ln33_fu_340_p1.read()) + sc_biguint<7>(shl_ln33_3_fu_324_p3.read()));
}

void pool::thread_add_ln33_4_fu_366_p2() {
    add_ln33_4_fu_366_p2 = (!zext_ln32_fu_350_p1.read().is_01() || !shl_ln33_2_reg_468.read().is_01())? sc_lv<4>(): (sc_biguint<4>(zext_ln32_fu_350_p1.read()) + sc_biguint<4>(shl_ln33_2_reg_468.read()));
}

void pool::thread_add_ln33_5_fu_384_p2() {
    add_ln33_5_fu_384_p2 = (!mul_ln30_reg_401.read().is_01() || !zext_ln33_4_fu_380_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(mul_ln30_reg_401.read()) + sc_biguint<12>(zext_ln33_4_fu_380_p1.read()));
}

void pool::thread_add_ln33_fu_319_p2() {
    add_ln33_fu_319_p2 = (!zext_ln31_fu_303_p1.read().is_01() || !shl_ln30_5_reg_425.read().is_01())? sc_lv<4>(): (sc_biguint<4>(zext_ln31_fu_303_p1.read()) + sc_biguint<4>(shl_ln30_5_reg_425.read()));
}

void pool::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void pool::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void pool::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void pool::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void pool::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void pool::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void pool::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void pool::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void pool::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void pool::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln28_fu_185_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void pool::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void pool::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln28_fu_185_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void pool::thread_i_0_cast8_fu_181_p1() {
    i_0_cast8_fu_181_p1 = esl_zext<4,3>(i_0_reg_87.read());
}

void pool::thread_i_fu_191_p2() {
    i_fu_191_p2 = (!i_0_reg_87.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_0_reg_87.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void pool::thread_icmp_ln28_fu_185_p2() {
    icmp_ln28_fu_185_p2 = (!i_0_reg_87.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_87.read() == ap_const_lv3_5);
}

void pool::thread_icmp_ln29_fu_221_p2() {
    icmp_ln29_fu_221_p2 = (!j_0_reg_99.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_99.read() == ap_const_lv3_5);
}

void pool::thread_icmp_ln31_fu_307_p2() {
    icmp_ln31_fu_307_p2 = (!k_0_reg_121.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(k_0_reg_121.read() == ap_const_lv2_2);
}

void pool::thread_icmp_ln32_fu_354_p2() {
    icmp_ln32_fu_354_p2 = (!m_0_reg_144.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(m_0_reg_144.read() == ap_const_lv2_2);
}

void pool::thread_input_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        input_r_address0 =  (sc_lv<12>) (zext_ln33_5_fu_389_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        input_r_address0 =  (sc_lv<12>) (zext_ln30_11_fu_263_p1.read());
    } else {
        input_r_address0 = "XXXXXXXXXXXX";
    }
}

void pool::thread_input_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void pool::thread_j_fu_227_p2() {
    j_fu_227_p2 = (!j_0_reg_99.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_0_reg_99.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void pool::thread_k_fu_313_p2() {
    k_fu_313_p2 = (!k_0_reg_121.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(k_0_reg_121.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void pool::thread_m_fu_360_p2() {
    m_fu_360_p2 = (!m_0_reg_144.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(m_0_reg_144.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void pool::thread_mul_ln30_2_fu_175_p0() {
    mul_ln30_2_fu_175_p0 =  (sc_lv<6>) (mul_ln30_2_fu_175_p00.read());
}

void pool::thread_mul_ln30_2_fu_175_p00() {
    mul_ln30_2_fu_175_p00 = esl_zext<10,6>(input_offset.read());
}

void pool::thread_mul_ln30_2_fu_175_p2() {
    mul_ln30_2_fu_175_p2 = (!mul_ln30_2_fu_175_p0.read().is_01() || !ap_const_lv10_19.is_01())? sc_lv<10>(): sc_biguint<6>(mul_ln30_2_fu_175_p0.read()) * sc_biguint<10>(ap_const_lv10_19);
}

void pool::thread_mul_ln30_fu_169_p0() {
    mul_ln30_fu_169_p0 =  (sc_lv<6>) (mul_ln30_fu_169_p00.read());
}

void pool::thread_mul_ln30_fu_169_p00() {
    mul_ln30_fu_169_p00 = esl_zext<12,6>(input_offset.read());
}

void pool::thread_mul_ln30_fu_169_p2() {
    mul_ln30_fu_169_p2 = (!mul_ln30_fu_169_p0.read().is_01() || !ap_const_lv12_64.is_01())? sc_lv<12>(): sc_biguint<6>(mul_ln30_fu_169_p0.read()) * sc_biguint<12>(ap_const_lv12_64);
}

void pool::thread_output_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        output_r_address0 = output_addr_reg_463.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        output_r_address0 =  (sc_lv<10>) (zext_ln30_13_fu_291_p1.read());
    } else {
        output_r_address0 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void pool::thread_output_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void pool::thread_output_r_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        output_r_d0 = select_ln33_reg_505.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        output_r_d0 = input_r_q0.read();
    } else {
        output_r_d0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void pool::thread_output_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void pool::thread_select_ln33_fu_394_p3() {
    select_ln33_fu_394_p3 = (!grp_fu_155_p2.read()[0].is_01())? sc_lv<16>(): ((grp_fu_155_p2.read()[0].to_bool())? input_load_1_reg_499.read(): empty_13_reg_132.read());
}

void pool::thread_shl_ln30_5_fu_197_p3() {
    shl_ln30_5_fu_197_p3 = esl_concat<3,1>(i_0_reg_87.read(), ap_const_lv1_0);
}

void pool::thread_shl_ln30_6_fu_209_p3() {
    shl_ln30_6_fu_209_p3 = esl_concat<3,2>(i_0_reg_87.read(), ap_const_lv2_0);
}

void pool::thread_shl_ln33_2_fu_295_p3() {
    shl_ln33_2_fu_295_p3 = esl_concat<3,1>(j_0_reg_99.read(), ap_const_lv1_0);
}

void pool::thread_shl_ln33_3_fu_324_p3() {
    shl_ln33_3_fu_324_p3 = esl_concat<4,3>(add_ln33_fu_319_p2.read(), ap_const_lv3_0);
}

void pool::thread_shl_ln33_4_fu_332_p3() {
    shl_ln33_4_fu_332_p3 = esl_concat<4,1>(add_ln33_fu_319_p2.read(), ap_const_lv1_0);
}

void pool::thread_shl_ln_fu_246_p3() {
    shl_ln_fu_246_p3 = esl_concat<6,1>(add_ln30_2_fu_241_p2.read(), ap_const_lv1_0);
}

void pool::thread_tmp_fu_233_p3() {
    tmp_fu_233_p3 = esl_concat<3,3>(i_0_reg_87.read(), j_0_reg_99.read());
}

void pool::thread_zext_ln29_fu_217_p1() {
    zext_ln29_fu_217_p1 = esl_zext<4,3>(j_0_reg_99.read());
}

void pool::thread_zext_ln30_10_fu_254_p1() {
    zext_ln30_10_fu_254_p1 = esl_zext<12,7>(shl_ln_fu_246_p3.read());
}

void pool::thread_zext_ln30_11_fu_263_p1() {
    zext_ln30_11_fu_263_p1 = esl_zext<64,12>(add_ln30_4_fu_258_p2.read());
}

void pool::thread_zext_ln30_12_fu_282_p1() {
    zext_ln30_12_fu_282_p1 = esl_zext<10,5>(add_ln30_fu_277_p2.read());
}

void pool::thread_zext_ln30_13_fu_291_p1() {
    zext_ln30_13_fu_291_p1 = esl_zext<64,10>(add_ln30_5_reg_453.read());
}

void pool::thread_zext_ln30_7_fu_273_p1() {
    zext_ln30_7_fu_273_p1 = esl_zext<5,4>(add_ln30_3_fu_268_p2.read());
}

void pool::thread_zext_ln30_fu_205_p1() {
    zext_ln30_fu_205_p1 = esl_zext<6,4>(shl_ln30_5_fu_197_p3.read());
}

void pool::thread_zext_ln31_fu_303_p1() {
    zext_ln31_fu_303_p1 = esl_zext<4,2>(k_0_reg_121.read());
}

void pool::thread_zext_ln32_fu_350_p1() {
    zext_ln32_fu_350_p1 = esl_zext<4,2>(m_0_reg_144.read());
}

void pool::thread_zext_ln33_3_fu_371_p1() {
    zext_ln33_3_fu_371_p1 = esl_zext<7,4>(add_ln33_4_fu_366_p2.read());
}

void pool::thread_zext_ln33_4_fu_380_p1() {
    zext_ln33_4_fu_380_p1 = esl_zext<12,7>(add_ln33_2_fu_375_p2.read());
}

void pool::thread_zext_ln33_5_fu_389_p1() {
    zext_ln33_5_fu_389_p1 = esl_zext<64,12>(add_ln33_5_fu_384_p2.read());
}

void pool::thread_zext_ln33_fu_340_p1() {
    zext_ln33_fu_340_p1 = esl_zext<7,5>(shl_ln33_4_fu_332_p3.read());
}

void pool::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln28_fu_185_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln29_fu_221_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln31_fu_307_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(icmp_ln32_fu_354_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<9>) ("XXXXXXXXX");
            break;
    }
}

}

