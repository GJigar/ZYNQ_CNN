// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "conv2.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic conv2::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic conv2::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<16> conv2::ap_ST_fsm_state1 = "1";
const sc_lv<16> conv2::ap_ST_fsm_state2 = "10";
const sc_lv<16> conv2::ap_ST_fsm_state3 = "100";
const sc_lv<16> conv2::ap_ST_fsm_state4 = "1000";
const sc_lv<16> conv2::ap_ST_fsm_state5 = "10000";
const sc_lv<16> conv2::ap_ST_fsm_state6 = "100000";
const sc_lv<16> conv2::ap_ST_fsm_state7 = "1000000";
const sc_lv<16> conv2::ap_ST_fsm_state8 = "10000000";
const sc_lv<16> conv2::ap_ST_fsm_state9 = "100000000";
const sc_lv<16> conv2::ap_ST_fsm_state10 = "1000000000";
const sc_lv<16> conv2::ap_ST_fsm_state11 = "10000000000";
const sc_lv<16> conv2::ap_ST_fsm_state12 = "100000000000";
const sc_lv<16> conv2::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<16> conv2::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<16> conv2::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<16> conv2::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<32> conv2::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> conv2::ap_const_lv32_1 = "1";
const sc_lv<1> conv2::ap_const_lv1_0 = "0";
const sc_lv<32> conv2::ap_const_lv32_2 = "10";
const sc_lv<32> conv2::ap_const_lv32_3 = "11";
const sc_lv<32> conv2::ap_const_lv32_4 = "100";
const sc_lv<32> conv2::ap_const_lv32_5 = "101";
const sc_lv<32> conv2::ap_const_lv32_9 = "1001";
const sc_lv<32> conv2::ap_const_lv32_E = "1110";
const sc_lv<4> conv2::ap_const_lv4_0 = "0000";
const sc_lv<1> conv2::ap_const_lv1_1 = "1";
const sc_lv<3> conv2::ap_const_lv3_0 = "000";
const sc_lv<32> conv2::ap_const_lv32_F = "1111";
const sc_lv<32> conv2::ap_const_lv32_8 = "1000";
const sc_lv<32> conv2::ap_const_lv32_A = "1010";
const sc_lv<32> conv2::ap_const_lv32_6 = "110";
const sc_lv<13> conv2::ap_const_lv13_C4 = "11000100";
const sc_lv<4> conv2::ap_const_lv4_A = "1010";
const sc_lv<4> conv2::ap_const_lv4_1 = "1";
const sc_lv<3> conv2::ap_const_lv3_5 = "101";
const sc_lv<3> conv2::ap_const_lv3_1 = "1";
const sc_lv<2> conv2::ap_const_lv2_0 = "00";
const sc_lv<15> conv2::ap_const_lv15_19 = "11001";
const bool conv2::ap_const_boolean_1 = true;

conv2::conv2(sc_module_name name) : sc_module(name), mVcdFile(0) {
    conv2_weight_U = new conv2_conv2_weight("conv2_weight_U");
    conv2_weight_U->clk(ap_clk);
    conv2_weight_U->reset(ap_rst);
    conv2_weight_U->address0(conv2_weight_address0);
    conv2_weight_U->ce0(conv2_weight_ce0);
    conv2_weight_U->q0(conv2_weight_q0);
    my_net_hadd_16ns_cud_U17 = new my_net_hadd_16ns_cud<1,5,16,16,16>("my_net_hadd_16ns_cud_U17");
    my_net_hadd_16ns_cud_U17->clk(ap_clk);
    my_net_hadd_16ns_cud_U17->reset(ap_rst);
    my_net_hadd_16ns_cud_U17->din0(output_load_reg_501);
    my_net_hadd_16ns_cud_U17->din1(tmp_reg_496);
    my_net_hadd_16ns_cud_U17->ce(ap_var_for_const0);
    my_net_hadd_16ns_cud_U17->dout(grp_fu_162_p2);
    my_net_hmul_16ns_dEe_U18 = new my_net_hmul_16ns_dEe<1,4,16,16,16>("my_net_hmul_16ns_dEe_U18");
    my_net_hmul_16ns_dEe_U18->clk(ap_clk);
    my_net_hmul_16ns_dEe_U18->reset(ap_rst);
    my_net_hmul_16ns_dEe_U18->din0(input_load_reg_486);
    my_net_hmul_16ns_dEe_U18->din1(conv2_weight_load_reg_491);
    my_net_hmul_16ns_dEe_U18->ce(ap_var_for_const0);
    my_net_hmul_16ns_dEe_U18->dout(grp_fu_166_p2);
    my_net_am_addmul_g8j_U19 = new my_net_am_addmul_g8j<1,1,5,10,6,15>("my_net_am_addmul_g8j_U19");
    my_net_am_addmul_g8j_U19->din0(grp_fu_396_p0);
    my_net_am_addmul_g8j_U19->din1(grp_fu_396_p1);
    my_net_am_addmul_g8j_U19->din2(grp_fu_396_p2);
    my_net_am_addmul_g8j_U19->dout(grp_fu_396_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln19_10_fu_362_p2);
    sensitive << ( mul_ln19_1_reg_409 );
    sensitive << ( sext_ln19_fu_358_p1 );

    SC_METHOD(thread_add_ln19_11_fu_386_p2);
    sensitive << ( mul_ln19_reg_404 );
    sensitive << ( zext_ln19_12_fu_382_p1 );

    SC_METHOD(thread_add_ln19_1_fu_279_p2);
    sensitive << ( r_0_reg_116 );
    sensitive << ( zext_ln14_fu_259_p1 );

    SC_METHOD(thread_add_ln19_3_fu_353_p2);
    sensitive << ( sub_ln19_reg_458 );
    sensitive << ( zext_ln19_10_fu_349_p1 );

    SC_METHOD(thread_add_ln19_4_fu_377_p2);
    sensitive << ( zext_ln14_1_reg_445 );
    sensitive << ( add_ln19_8_fu_372_p2 );

    SC_METHOD(thread_add_ln19_6_fu_240_p2);
    sensitive << ( shl_ln19_4_reg_427 );
    sensitive << ( zext_ln11_fu_224_p1 );

    SC_METHOD(thread_add_ln19_7_fu_343_p2);
    sensitive << ( c_0_reg_128 );
    sensitive << ( zext_ln17_1_fu_327_p1 );

    SC_METHOD(thread_add_ln19_8_fu_372_p2);
    sensitive << ( shl_ln_reg_463 );
    sensitive << ( zext_ln17_fu_323_p1 );

    SC_METHOD(thread_add_ln19_fu_249_p2);
    sensitive << ( shl_ln19_3_reg_422 );
    sensitive << ( zext_ln19_6_fu_245_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln8_fu_196_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln8_fu_196_p2 );

    SC_METHOD(thread_c_fu_234_p2);
    sensitive << ( c_0_reg_128 );

    SC_METHOD(thread_conv2_weight_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( sext_ln19_5_fu_391_p1 );

    SC_METHOD(thread_conv2_weight_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_396_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( grp_fu_396_p00 );

    SC_METHOD(thread_grp_fu_396_p00);
    sensitive << ( input_offset );

    SC_METHOD(thread_grp_fu_396_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( grp_fu_396_p10 );

    SC_METHOD(thread_grp_fu_396_p10);
    sensitive << ( tmp_20_fu_170_p3 );

    SC_METHOD(thread_grp_fu_396_p2);
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_icmp_ln11_fu_228_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( c_0_reg_128 );

    SC_METHOD(thread_icmp_ln14_fu_267_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( kr_0_reg_140 );

    SC_METHOD(thread_icmp_ln17_fu_331_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( kc_0_reg_151 );

    SC_METHOD(thread_icmp_ln8_fu_196_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( r_0_reg_116 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( sext_ln19_4_fu_367_p1 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_kc_fu_337_p2);
    sensitive << ( kc_0_reg_151 );

    SC_METHOD(thread_kr_fu_273_p2);
    sensitive << ( kr_0_reg_140 );

    SC_METHOD(thread_mul_ln19_1_fu_190_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( mul_ln19_1_fu_190_p00 );

    SC_METHOD(thread_mul_ln19_1_fu_190_p00);
    sensitive << ( input_offset );

    SC_METHOD(thread_mul_ln19_1_fu_190_p2);
    sensitive << ( mul_ln19_1_fu_190_p0 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( output_addr_reg_440 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( tmp_s_reg_506 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_r_fu_202_p2);
    sensitive << ( r_0_reg_116 );

    SC_METHOD(thread_sext_ln19_4_fu_367_p1);
    sensitive << ( add_ln19_10_fu_362_p2 );

    SC_METHOD(thread_sext_ln19_5_fu_391_p1);
    sensitive << ( add_ln19_11_fu_386_p2 );

    SC_METHOD(thread_sext_ln19_fu_358_p1);
    sensitive << ( add_ln19_3_fu_353_p2 );

    SC_METHOD(thread_shl_ln19_3_fu_208_p3);
    sensitive << ( r_0_reg_116 );

    SC_METHOD(thread_shl_ln19_4_fu_216_p3);
    sensitive << ( r_0_reg_116 );

    SC_METHOD(thread_shl_ln19_5_fu_285_p3);
    sensitive << ( add_ln19_1_fu_279_p2 );

    SC_METHOD(thread_shl_ln19_6_fu_297_p3);
    sensitive << ( add_ln19_1_fu_279_p2 );

    SC_METHOD(thread_shl_ln_fu_315_p3);
    sensitive << ( kr_0_reg_140 );

    SC_METHOD(thread_sub_ln19_fu_309_p2);
    sensitive << ( zext_ln19_8_fu_293_p1 );
    sensitive << ( zext_ln19_9_fu_305_p1 );

    SC_METHOD(thread_tmp_20_fu_170_p3);
    sensitive << ( weight_offset );

    SC_METHOD(thread_zext_ln11_fu_224_p1);
    sensitive << ( c_0_reg_128 );

    SC_METHOD(thread_zext_ln14_1_fu_263_p1);
    sensitive << ( kr_0_reg_140 );

    SC_METHOD(thread_zext_ln14_fu_259_p1);
    sensitive << ( kr_0_reg_140 );

    SC_METHOD(thread_zext_ln17_1_fu_327_p1);
    sensitive << ( kc_0_reg_151 );

    SC_METHOD(thread_zext_ln17_fu_323_p1);
    sensitive << ( kc_0_reg_151 );

    SC_METHOD(thread_zext_ln19_10_fu_349_p1);
    sensitive << ( add_ln19_7_fu_343_p2 );

    SC_METHOD(thread_zext_ln19_12_fu_382_p1);
    sensitive << ( add_ln19_4_fu_377_p2 );

    SC_METHOD(thread_zext_ln19_4_fu_254_p1);
    sensitive << ( add_ln19_fu_249_p2 );

    SC_METHOD(thread_zext_ln19_6_fu_245_p1);
    sensitive << ( add_ln19_6_fu_240_p2 );

    SC_METHOD(thread_zext_ln19_8_fu_293_p1);
    sensitive << ( shl_ln19_5_fu_285_p3 );

    SC_METHOD(thread_zext_ln19_9_fu_305_p1);
    sensitive << ( shl_ln19_6_fu_297_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln8_fu_196_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln11_fu_228_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln14_fu_267_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln17_fu_331_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "conv2_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, input_offset, "(port)input_offset");
    sc_trace(mVcdFile, weight_offset, "(port)weight_offset");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
    sc_trace(mVcdFile, output_r_q0, "(port)output_r_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, conv2_weight_address0, "conv2_weight_address0");
    sc_trace(mVcdFile, conv2_weight_ce0, "conv2_weight_ce0");
    sc_trace(mVcdFile, conv2_weight_q0, "conv2_weight_q0");
    sc_trace(mVcdFile, grp_fu_396_p3, "grp_fu_396_p3");
    sc_trace(mVcdFile, mul_ln19_reg_404, "mul_ln19_reg_404");
    sc_trace(mVcdFile, mul_ln19_1_fu_190_p2, "mul_ln19_1_fu_190_p2");
    sc_trace(mVcdFile, mul_ln19_1_reg_409, "mul_ln19_1_reg_409");
    sc_trace(mVcdFile, r_fu_202_p2, "r_fu_202_p2");
    sc_trace(mVcdFile, r_reg_417, "r_reg_417");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, shl_ln19_3_fu_208_p3, "shl_ln19_3_fu_208_p3");
    sc_trace(mVcdFile, shl_ln19_3_reg_422, "shl_ln19_3_reg_422");
    sc_trace(mVcdFile, icmp_ln8_fu_196_p2, "icmp_ln8_fu_196_p2");
    sc_trace(mVcdFile, shl_ln19_4_fu_216_p3, "shl_ln19_4_fu_216_p3");
    sc_trace(mVcdFile, shl_ln19_4_reg_427, "shl_ln19_4_reg_427");
    sc_trace(mVcdFile, c_fu_234_p2, "c_fu_234_p2");
    sc_trace(mVcdFile, c_reg_435, "c_reg_435");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, output_addr_reg_440, "output_addr_reg_440");
    sc_trace(mVcdFile, icmp_ln11_fu_228_p2, "icmp_ln11_fu_228_p2");
    sc_trace(mVcdFile, zext_ln14_1_fu_263_p1, "zext_ln14_1_fu_263_p1");
    sc_trace(mVcdFile, zext_ln14_1_reg_445, "zext_ln14_1_reg_445");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, kr_fu_273_p2, "kr_fu_273_p2");
    sc_trace(mVcdFile, kr_reg_453, "kr_reg_453");
    sc_trace(mVcdFile, sub_ln19_fu_309_p2, "sub_ln19_fu_309_p2");
    sc_trace(mVcdFile, sub_ln19_reg_458, "sub_ln19_reg_458");
    sc_trace(mVcdFile, icmp_ln14_fu_267_p2, "icmp_ln14_fu_267_p2");
    sc_trace(mVcdFile, shl_ln_fu_315_p3, "shl_ln_fu_315_p3");
    sc_trace(mVcdFile, shl_ln_reg_463, "shl_ln_reg_463");
    sc_trace(mVcdFile, kc_fu_337_p2, "kc_fu_337_p2");
    sc_trace(mVcdFile, kc_reg_471, "kc_reg_471");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, icmp_ln17_fu_331_p2, "icmp_ln17_fu_331_p2");
    sc_trace(mVcdFile, input_load_reg_486, "input_load_reg_486");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, conv2_weight_load_reg_491, "conv2_weight_load_reg_491");
    sc_trace(mVcdFile, grp_fu_166_p2, "grp_fu_166_p2");
    sc_trace(mVcdFile, tmp_reg_496, "tmp_reg_496");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, output_load_reg_501, "output_load_reg_501");
    sc_trace(mVcdFile, grp_fu_162_p2, "grp_fu_162_p2");
    sc_trace(mVcdFile, tmp_s_reg_506, "tmp_s_reg_506");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, r_0_reg_116, "r_0_reg_116");
    sc_trace(mVcdFile, c_0_reg_128, "c_0_reg_128");
    sc_trace(mVcdFile, kr_0_reg_140, "kr_0_reg_140");
    sc_trace(mVcdFile, kc_0_reg_151, "kc_0_reg_151");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, zext_ln19_4_fu_254_p1, "zext_ln19_4_fu_254_p1");
    sc_trace(mVcdFile, sext_ln19_4_fu_367_p1, "sext_ln19_4_fu_367_p1");
    sc_trace(mVcdFile, sext_ln19_5_fu_391_p1, "sext_ln19_5_fu_391_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_20_fu_170_p3, "tmp_20_fu_170_p3");
    sc_trace(mVcdFile, mul_ln19_1_fu_190_p0, "mul_ln19_1_fu_190_p0");
    sc_trace(mVcdFile, zext_ln11_fu_224_p1, "zext_ln11_fu_224_p1");
    sc_trace(mVcdFile, add_ln19_6_fu_240_p2, "add_ln19_6_fu_240_p2");
    sc_trace(mVcdFile, zext_ln19_6_fu_245_p1, "zext_ln19_6_fu_245_p1");
    sc_trace(mVcdFile, add_ln19_fu_249_p2, "add_ln19_fu_249_p2");
    sc_trace(mVcdFile, zext_ln14_fu_259_p1, "zext_ln14_fu_259_p1");
    sc_trace(mVcdFile, add_ln19_1_fu_279_p2, "add_ln19_1_fu_279_p2");
    sc_trace(mVcdFile, shl_ln19_5_fu_285_p3, "shl_ln19_5_fu_285_p3");
    sc_trace(mVcdFile, shl_ln19_6_fu_297_p3, "shl_ln19_6_fu_297_p3");
    sc_trace(mVcdFile, zext_ln19_8_fu_293_p1, "zext_ln19_8_fu_293_p1");
    sc_trace(mVcdFile, zext_ln19_9_fu_305_p1, "zext_ln19_9_fu_305_p1");
    sc_trace(mVcdFile, zext_ln17_1_fu_327_p1, "zext_ln17_1_fu_327_p1");
    sc_trace(mVcdFile, add_ln19_7_fu_343_p2, "add_ln19_7_fu_343_p2");
    sc_trace(mVcdFile, zext_ln19_10_fu_349_p1, "zext_ln19_10_fu_349_p1");
    sc_trace(mVcdFile, add_ln19_3_fu_353_p2, "add_ln19_3_fu_353_p2");
    sc_trace(mVcdFile, sext_ln19_fu_358_p1, "sext_ln19_fu_358_p1");
    sc_trace(mVcdFile, add_ln19_10_fu_362_p2, "add_ln19_10_fu_362_p2");
    sc_trace(mVcdFile, zext_ln17_fu_323_p1, "zext_ln17_fu_323_p1");
    sc_trace(mVcdFile, add_ln19_8_fu_372_p2, "add_ln19_8_fu_372_p2");
    sc_trace(mVcdFile, add_ln19_4_fu_377_p2, "add_ln19_4_fu_377_p2");
    sc_trace(mVcdFile, zext_ln19_12_fu_382_p1, "zext_ln19_12_fu_382_p1");
    sc_trace(mVcdFile, add_ln19_11_fu_386_p2, "add_ln19_11_fu_386_p2");
    sc_trace(mVcdFile, grp_fu_396_p0, "grp_fu_396_p0");
    sc_trace(mVcdFile, grp_fu_396_p1, "grp_fu_396_p1");
    sc_trace(mVcdFile, grp_fu_396_p2, "grp_fu_396_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_396_p00, "grp_fu_396_p00");
    sc_trace(mVcdFile, grp_fu_396_p10, "grp_fu_396_p10");
    sc_trace(mVcdFile, mul_ln19_1_fu_190_p00, "mul_ln19_1_fu_190_p00");
#endif

    }
}

conv2::~conv2() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete conv2_weight_U;
    delete my_net_hadd_16ns_cud_U17;
    delete my_net_hmul_16ns_dEe_U18;
    delete my_net_am_addmul_g8j_U19;
}

void conv2::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void conv2::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln14_fu_267_p2.read(), ap_const_lv1_1))) {
        c_0_reg_128 = c_reg_435.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln8_fu_196_p2.read(), ap_const_lv1_0))) {
        c_0_reg_128 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        kc_0_reg_151 = kc_reg_471.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_267_p2.read()))) {
        kc_0_reg_151 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln17_fu_331_p2.read(), ap_const_lv1_1))) {
        kr_0_reg_140 = kr_reg_453.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln11_fu_228_p2.read()))) {
        kr_0_reg_140 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln11_fu_228_p2.read(), ap_const_lv1_1))) {
        r_0_reg_116 = r_reg_417.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        r_0_reg_116 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        c_reg_435 = c_fu_234_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        conv2_weight_load_reg_491 = conv2_weight_q0.read();
        input_load_reg_486 = input_r_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        kc_reg_471 = kc_fu_337_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        kr_reg_453 = kr_fu_273_p2.read();
        zext_ln14_1_reg_445 = zext_ln14_1_fu_263_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        mul_ln19_1_reg_409 = mul_ln19_1_fu_190_p2.read();
        mul_ln19_reg_404 = grp_fu_396_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln11_fu_228_p2.read()))) {
        output_addr_reg_440 =  (sc_lv<7>) (zext_ln19_4_fu_254_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        output_load_reg_501 = output_r_q0.read();
        tmp_reg_496 = grp_fu_166_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        r_reg_417 = r_fu_202_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln8_fu_196_p2.read(), ap_const_lv1_0))) {
        shl_ln19_3_reg_422 = shl_ln19_3_fu_208_p3.read();
        shl_ln19_4_reg_427 = shl_ln19_4_fu_216_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_267_p2.read()))) {
        shl_ln_reg_463 = shl_ln_fu_315_p3.read();
        sub_ln19_reg_458 = sub_ln19_fu_309_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        tmp_s_reg_506 = grp_fu_162_p2.read();
    }
}

void conv2::thread_add_ln19_10_fu_362_p2() {
    add_ln19_10_fu_362_p2 = (!sext_ln19_fu_358_p1.read().is_01() || !mul_ln19_1_reg_409.read().is_01())? sc_lv<13>(): (sc_bigint<13>(sext_ln19_fu_358_p1.read()) + sc_biguint<13>(mul_ln19_1_reg_409.read()));
}

void conv2::thread_add_ln19_11_fu_386_p2() {
    add_ln19_11_fu_386_p2 = (!zext_ln19_12_fu_382_p1.read().is_01() || !mul_ln19_reg_404.read().is_01())? sc_lv<15>(): (sc_biguint<15>(zext_ln19_12_fu_382_p1.read()) + sc_biguint<15>(mul_ln19_reg_404.read()));
}

void conv2::thread_add_ln19_1_fu_279_p2() {
    add_ln19_1_fu_279_p2 = (!r_0_reg_116.read().is_01() || !zext_ln14_fu_259_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(r_0_reg_116.read()) + sc_biguint<4>(zext_ln14_fu_259_p1.read()));
}

void conv2::thread_add_ln19_3_fu_353_p2() {
    add_ln19_3_fu_353_p2 = (!zext_ln19_10_fu_349_p1.read().is_01() || !sub_ln19_reg_458.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln19_10_fu_349_p1.read()) + sc_biguint<9>(sub_ln19_reg_458.read()));
}

void conv2::thread_add_ln19_4_fu_377_p2() {
    add_ln19_4_fu_377_p2 = (!add_ln19_8_fu_372_p2.read().is_01() || !zext_ln14_1_reg_445.read().is_01())? sc_lv<5>(): (sc_biguint<5>(add_ln19_8_fu_372_p2.read()) + sc_biguint<5>(zext_ln14_1_reg_445.read()));
}

void conv2::thread_add_ln19_6_fu_240_p2() {
    add_ln19_6_fu_240_p2 = (!shl_ln19_4_reg_427.read().is_01() || !zext_ln11_fu_224_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(shl_ln19_4_reg_427.read()) + sc_biguint<5>(zext_ln11_fu_224_p1.read()));
}

void conv2::thread_add_ln19_7_fu_343_p2() {
    add_ln19_7_fu_343_p2 = (!c_0_reg_128.read().is_01() || !zext_ln17_1_fu_327_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(c_0_reg_128.read()) + sc_biguint<4>(zext_ln17_1_fu_327_p1.read()));
}

void conv2::thread_add_ln19_8_fu_372_p2() {
    add_ln19_8_fu_372_p2 = (!shl_ln_reg_463.read().is_01() || !zext_ln17_fu_323_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(shl_ln_reg_463.read()) + sc_biguint<5>(zext_ln17_fu_323_p1.read()));
}

void conv2::thread_add_ln19_fu_249_p2() {
    add_ln19_fu_249_p2 = (!zext_ln19_6_fu_245_p1.read().is_01() || !shl_ln19_3_reg_422.read().is_01())? sc_lv<7>(): (sc_biguint<7>(zext_ln19_6_fu_245_p1.read()) + sc_biguint<7>(shl_ln19_3_reg_422.read()));
}

void conv2::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void conv2::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void conv2::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void conv2::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void conv2::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void conv2::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void conv2::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void conv2::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void conv2::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void conv2::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void conv2::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void conv2::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void conv2::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln8_fu_196_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void conv2::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void conv2::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln8_fu_196_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void conv2::thread_c_fu_234_p2() {
    c_fu_234_p2 = (!c_0_reg_128.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(c_0_reg_128.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void conv2::thread_conv2_weight_address0() {
    conv2_weight_address0 =  (sc_lv<14>) (sext_ln19_5_fu_391_p1.read());
}

void conv2::thread_conv2_weight_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        conv2_weight_ce0 = ap_const_logic_1;
    } else {
        conv2_weight_ce0 = ap_const_logic_0;
    }
}

void conv2::thread_grp_fu_396_p0() {
    grp_fu_396_p0 =  (sc_lv<5>) (grp_fu_396_p00.read());
}

void conv2::thread_grp_fu_396_p00() {
    grp_fu_396_p00 = esl_zext<11,5>(input_offset.read());
}

void conv2::thread_grp_fu_396_p1() {
    grp_fu_396_p1 =  (sc_lv<10>) (grp_fu_396_p10.read());
}

void conv2::thread_grp_fu_396_p10() {
    grp_fu_396_p10 = esl_zext<11,10>(tmp_20_fu_170_p3.read());
}

void conv2::thread_grp_fu_396_p2() {
    grp_fu_396_p2 =  (sc_lv<6>) (ap_const_lv15_19);
}

void conv2::thread_icmp_ln11_fu_228_p2() {
    icmp_ln11_fu_228_p2 = (!c_0_reg_128.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(c_0_reg_128.read() == ap_const_lv4_A);
}

void conv2::thread_icmp_ln14_fu_267_p2() {
    icmp_ln14_fu_267_p2 = (!kr_0_reg_140.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(kr_0_reg_140.read() == ap_const_lv3_5);
}

void conv2::thread_icmp_ln17_fu_331_p2() {
    icmp_ln17_fu_331_p2 = (!kc_0_reg_151.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(kc_0_reg_151.read() == ap_const_lv3_5);
}

void conv2::thread_icmp_ln8_fu_196_p2() {
    icmp_ln8_fu_196_p2 = (!r_0_reg_116.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(r_0_reg_116.read() == ap_const_lv4_A);
}

void conv2::thread_input_r_address0() {
    input_r_address0 =  (sc_lv<12>) (sext_ln19_4_fu_367_p1.read());
}

void conv2::thread_input_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void conv2::thread_kc_fu_337_p2() {
    kc_fu_337_p2 = (!kc_0_reg_151.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(kc_0_reg_151.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void conv2::thread_kr_fu_273_p2() {
    kr_fu_273_p2 = (!kr_0_reg_140.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(kr_0_reg_140.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void conv2::thread_mul_ln19_1_fu_190_p0() {
    mul_ln19_1_fu_190_p0 =  (sc_lv<5>) (mul_ln19_1_fu_190_p00.read());
}

void conv2::thread_mul_ln19_1_fu_190_p00() {
    mul_ln19_1_fu_190_p00 = esl_zext<13,5>(input_offset.read());
}

void conv2::thread_mul_ln19_1_fu_190_p2() {
    mul_ln19_1_fu_190_p2 = (!mul_ln19_1_fu_190_p0.read().is_01() || !ap_const_lv13_C4.is_01())? sc_lv<13>(): sc_biguint<5>(mul_ln19_1_fu_190_p0.read()) * sc_biguint<13>(ap_const_lv13_C4);
}

void conv2::thread_output_r_address0() {
    output_r_address0 = output_addr_reg_440.read();
}

void conv2::thread_output_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void conv2::thread_output_r_d0() {
    output_r_d0 = tmp_s_reg_506.read();
}

void conv2::thread_output_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void conv2::thread_r_fu_202_p2() {
    r_fu_202_p2 = (!r_0_reg_116.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(r_0_reg_116.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void conv2::thread_sext_ln19_4_fu_367_p1() {
    sext_ln19_4_fu_367_p1 = esl_sext<64,13>(add_ln19_10_fu_362_p2.read());
}

void conv2::thread_sext_ln19_5_fu_391_p1() {
    sext_ln19_5_fu_391_p1 = esl_sext<64,15>(add_ln19_11_fu_386_p2.read());
}

void conv2::thread_sext_ln19_fu_358_p1() {
    sext_ln19_fu_358_p1 = esl_sext<13,9>(add_ln19_3_fu_353_p2.read());
}

void conv2::thread_shl_ln19_3_fu_208_p3() {
    shl_ln19_3_fu_208_p3 = esl_concat<4,3>(r_0_reg_116.read(), ap_const_lv3_0);
}

void conv2::thread_shl_ln19_4_fu_216_p3() {
    shl_ln19_4_fu_216_p3 = esl_concat<4,1>(r_0_reg_116.read(), ap_const_lv1_0);
}

void conv2::thread_shl_ln19_5_fu_285_p3() {
    shl_ln19_5_fu_285_p3 = esl_concat<4,4>(add_ln19_1_fu_279_p2.read(), ap_const_lv4_0);
}

void conv2::thread_shl_ln19_6_fu_297_p3() {
    shl_ln19_6_fu_297_p3 = esl_concat<4,1>(add_ln19_1_fu_279_p2.read(), ap_const_lv1_0);
}

void conv2::thread_shl_ln_fu_315_p3() {
    shl_ln_fu_315_p3 = esl_concat<3,2>(kr_0_reg_140.read(), ap_const_lv2_0);
}

void conv2::thread_sub_ln19_fu_309_p2() {
    sub_ln19_fu_309_p2 = (!zext_ln19_8_fu_293_p1.read().is_01() || !zext_ln19_9_fu_305_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln19_8_fu_293_p1.read()) - sc_biguint<9>(zext_ln19_9_fu_305_p1.read()));
}

void conv2::thread_tmp_20_fu_170_p3() {
    tmp_20_fu_170_p3 = esl_concat<6,4>(weight_offset.read(), ap_const_lv4_0);
}

void conv2::thread_zext_ln11_fu_224_p1() {
    zext_ln11_fu_224_p1 = esl_zext<5,4>(c_0_reg_128.read());
}

void conv2::thread_zext_ln14_1_fu_263_p1() {
    zext_ln14_1_fu_263_p1 = esl_zext<5,3>(kr_0_reg_140.read());
}

void conv2::thread_zext_ln14_fu_259_p1() {
    zext_ln14_fu_259_p1 = esl_zext<4,3>(kr_0_reg_140.read());
}

void conv2::thread_zext_ln17_1_fu_327_p1() {
    zext_ln17_1_fu_327_p1 = esl_zext<4,3>(kc_0_reg_151.read());
}

void conv2::thread_zext_ln17_fu_323_p1() {
    zext_ln17_fu_323_p1 = esl_zext<5,3>(kc_0_reg_151.read());
}

void conv2::thread_zext_ln19_10_fu_349_p1() {
    zext_ln19_10_fu_349_p1 = esl_zext<9,4>(add_ln19_7_fu_343_p2.read());
}

void conv2::thread_zext_ln19_12_fu_382_p1() {
    zext_ln19_12_fu_382_p1 = esl_zext<15,5>(add_ln19_4_fu_377_p2.read());
}

void conv2::thread_zext_ln19_4_fu_254_p1() {
    zext_ln19_4_fu_254_p1 = esl_zext<64,7>(add_ln19_fu_249_p2.read());
}

void conv2::thread_zext_ln19_6_fu_245_p1() {
    zext_ln19_6_fu_245_p1 = esl_zext<7,5>(add_ln19_6_fu_240_p2.read());
}

void conv2::thread_zext_ln19_8_fu_293_p1() {
    zext_ln19_8_fu_293_p1 = esl_zext<9,8>(shl_ln19_5_fu_285_p3.read());
}

void conv2::thread_zext_ln19_9_fu_305_p1() {
    zext_ln19_9_fu_305_p1 = esl_zext<9,5>(shl_ln19_6_fu_297_p3.read());
}

void conv2::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln8_fu_196_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln11_fu_228_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln14_fu_267_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln17_fu_331_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXXXXXX";
            break;
    }
}

}

