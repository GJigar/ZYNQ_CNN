// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pool_HH_
#define _pool_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "my_net_hcmp_16ns_eOg.h"

namespace ap_rtl {

struct pool : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<12> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<16> > input_r_q0;
    sc_in< sc_lv<6> > input_offset;
    sc_out< sc_lv<10> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<16> > output_r_d0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    pool(sc_module_name name);
    SC_HAS_PROCESS(pool);

    ~pool();

    sc_trace_file* mVcdFile;

    my_net_hcmp_16ns_eOg<1,2,16,16,1>* my_net_hcmp_16ns_eOg_U26;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<12> > mul_ln30_fu_169_p2;
    sc_signal< sc_lv<12> > mul_ln30_reg_401;
    sc_signal< sc_lv<10> > mul_ln30_2_fu_175_p2;
    sc_signal< sc_lv<10> > mul_ln30_2_reg_407;
    sc_signal< sc_lv<4> > i_0_cast8_fu_181_p1;
    sc_signal< sc_lv<4> > i_0_cast8_reg_412;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<3> > i_fu_191_p2;
    sc_signal< sc_lv<3> > i_reg_420;
    sc_signal< sc_lv<4> > shl_ln30_5_fu_197_p3;
    sc_signal< sc_lv<4> > shl_ln30_5_reg_425;
    sc_signal< sc_lv<1> > icmp_ln28_fu_185_p2;
    sc_signal< sc_lv<6> > zext_ln30_fu_205_p1;
    sc_signal< sc_lv<6> > zext_ln30_reg_430;
    sc_signal< sc_lv<5> > shl_ln30_6_fu_209_p3;
    sc_signal< sc_lv<5> > shl_ln30_6_reg_435;
    sc_signal< sc_lv<3> > j_fu_227_p2;
    sc_signal< sc_lv<3> > j_reg_443;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln29_fu_221_p2;
    sc_signal< sc_lv<10> > add_ln30_5_fu_286_p2;
    sc_signal< sc_lv<10> > add_ln30_5_reg_453;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<10> > output_addr_reg_463;
    sc_signal< sc_lv<4> > shl_ln33_2_fu_295_p3;
    sc_signal< sc_lv<4> > shl_ln33_2_reg_468;
    sc_signal< sc_lv<2> > k_fu_313_p2;
    sc_signal< sc_lv<2> > k_reg_476;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<7> > add_ln33_3_fu_344_p2;
    sc_signal< sc_lv<7> > add_ln33_3_reg_481;
    sc_signal< sc_lv<1> > icmp_ln31_fu_307_p2;
    sc_signal< sc_lv<2> > m_fu_360_p2;
    sc_signal< sc_lv<2> > m_reg_489;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln32_fu_354_p2;
    sc_signal< sc_lv<16> > input_load_1_reg_499;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<16> > select_ln33_fu_394_p3;
    sc_signal< sc_lv<16> > select_ln33_reg_505;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<3> > i_0_reg_87;
    sc_signal< sc_lv<3> > j_0_reg_99;
    sc_signal< sc_lv<16> > empty_11_reg_111;
    sc_signal< sc_lv<2> > k_0_reg_121;
    sc_signal< sc_lv<16> > empty_13_reg_132;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<2> > m_0_reg_144;
    sc_signal< sc_lv<64> > zext_ln30_11_fu_263_p1;
    sc_signal< sc_lv<64> > zext_ln30_13_fu_291_p1;
    sc_signal< sc_lv<64> > zext_ln33_5_fu_389_p1;
    sc_signal< sc_lv<6> > mul_ln30_fu_169_p0;
    sc_signal< sc_lv<6> > mul_ln30_2_fu_175_p0;
    sc_signal< sc_lv<6> > tmp_fu_233_p3;
    sc_signal< sc_lv<6> > add_ln30_2_fu_241_p2;
    sc_signal< sc_lv<7> > shl_ln_fu_246_p3;
    sc_signal< sc_lv<12> > zext_ln30_10_fu_254_p1;
    sc_signal< sc_lv<12> > add_ln30_4_fu_258_p2;
    sc_signal< sc_lv<4> > zext_ln29_fu_217_p1;
    sc_signal< sc_lv<4> > add_ln30_3_fu_268_p2;
    sc_signal< sc_lv<5> > zext_ln30_7_fu_273_p1;
    sc_signal< sc_lv<5> > add_ln30_fu_277_p2;
    sc_signal< sc_lv<10> > zext_ln30_12_fu_282_p1;
    sc_signal< sc_lv<4> > zext_ln31_fu_303_p1;
    sc_signal< sc_lv<4> > add_ln33_fu_319_p2;
    sc_signal< sc_lv<5> > shl_ln33_4_fu_332_p3;
    sc_signal< sc_lv<7> > zext_ln33_fu_340_p1;
    sc_signal< sc_lv<7> > shl_ln33_3_fu_324_p3;
    sc_signal< sc_lv<4> > zext_ln32_fu_350_p1;
    sc_signal< sc_lv<4> > add_ln33_4_fu_366_p2;
    sc_signal< sc_lv<7> > zext_ln33_3_fu_371_p1;
    sc_signal< sc_lv<7> > add_ln33_2_fu_375_p2;
    sc_signal< sc_lv<12> > zext_ln33_4_fu_380_p1;
    sc_signal< sc_lv<12> > add_ln33_5_fu_384_p2;
    sc_signal< sc_lv<1> > grp_fu_155_p2;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    sc_signal< sc_lv<10> > mul_ln30_2_fu_175_p00;
    sc_signal< sc_lv<12> > mul_ln30_fu_169_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<12> ap_const_lv12_64;
    static const sc_lv<10> ap_const_lv10_19;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<5> ap_const_lv5_4;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln30_2_fu_241_p2();
    void thread_add_ln30_3_fu_268_p2();
    void thread_add_ln30_4_fu_258_p2();
    void thread_add_ln30_5_fu_286_p2();
    void thread_add_ln30_fu_277_p2();
    void thread_add_ln33_2_fu_375_p2();
    void thread_add_ln33_3_fu_344_p2();
    void thread_add_ln33_4_fu_366_p2();
    void thread_add_ln33_5_fu_384_p2();
    void thread_add_ln33_fu_319_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_0_cast8_fu_181_p1();
    void thread_i_fu_191_p2();
    void thread_icmp_ln28_fu_185_p2();
    void thread_icmp_ln29_fu_221_p2();
    void thread_icmp_ln31_fu_307_p2();
    void thread_icmp_ln32_fu_354_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_j_fu_227_p2();
    void thread_k_fu_313_p2();
    void thread_m_fu_360_p2();
    void thread_mul_ln30_2_fu_175_p0();
    void thread_mul_ln30_2_fu_175_p00();
    void thread_mul_ln30_2_fu_175_p2();
    void thread_mul_ln30_fu_169_p0();
    void thread_mul_ln30_fu_169_p00();
    void thread_mul_ln30_fu_169_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_select_ln33_fu_394_p3();
    void thread_shl_ln30_5_fu_197_p3();
    void thread_shl_ln30_6_fu_209_p3();
    void thread_shl_ln33_2_fu_295_p3();
    void thread_shl_ln33_3_fu_324_p3();
    void thread_shl_ln33_4_fu_332_p3();
    void thread_shl_ln_fu_246_p3();
    void thread_tmp_fu_233_p3();
    void thread_zext_ln29_fu_217_p1();
    void thread_zext_ln30_10_fu_254_p1();
    void thread_zext_ln30_11_fu_263_p1();
    void thread_zext_ln30_12_fu_282_p1();
    void thread_zext_ln30_13_fu_291_p1();
    void thread_zext_ln30_7_fu_273_p1();
    void thread_zext_ln30_fu_205_p1();
    void thread_zext_ln31_fu_303_p1();
    void thread_zext_ln32_fu_350_p1();
    void thread_zext_ln33_3_fu_371_p1();
    void thread_zext_ln33_4_fu_380_p1();
    void thread_zext_ln33_5_fu_389_p1();
    void thread_zext_ln33_fu_340_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
