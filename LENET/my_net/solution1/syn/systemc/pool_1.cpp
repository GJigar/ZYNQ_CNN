// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "pool_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic pool_1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic pool_1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> pool_1::ap_ST_fsm_state1 = "1";
const sc_lv<9> pool_1::ap_ST_fsm_state2 = "10";
const sc_lv<9> pool_1::ap_ST_fsm_state3 = "100";
const sc_lv<9> pool_1::ap_ST_fsm_state4 = "1000";
const sc_lv<9> pool_1::ap_ST_fsm_state5 = "10000";
const sc_lv<9> pool_1::ap_ST_fsm_state6 = "100000";
const sc_lv<9> pool_1::ap_ST_fsm_state7 = "1000000";
const sc_lv<9> pool_1::ap_ST_fsm_state8 = "10000000";
const sc_lv<9> pool_1::ap_ST_fsm_state9 = "100000000";
const sc_lv<32> pool_1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> pool_1::ap_const_lv32_1 = "1";
const sc_lv<1> pool_1::ap_const_lv1_0 = "0";
const sc_lv<32> pool_1::ap_const_lv32_2 = "10";
const sc_lv<32> pool_1::ap_const_lv32_3 = "11";
const sc_lv<32> pool_1::ap_const_lv32_4 = "100";
const sc_lv<32> pool_1::ap_const_lv32_5 = "101";
const sc_lv<32> pool_1::ap_const_lv32_6 = "110";
const sc_lv<32> pool_1::ap_const_lv32_7 = "111";
const sc_lv<4> pool_1::ap_const_lv4_0 = "0000";
const sc_lv<1> pool_1::ap_const_lv1_1 = "1";
const sc_lv<2> pool_1::ap_const_lv2_0 = "00";
const sc_lv<32> pool_1::ap_const_lv32_8 = "1000";
const sc_lv<13> pool_1::ap_const_lv13_C4 = "11000100";
const sc_lv<4> pool_1::ap_const_lv4_E = "1110";
const sc_lv<4> pool_1::ap_const_lv4_1 = "1";
const sc_lv<5> pool_1::ap_const_lv5_0 = "00000";
const sc_lv<2> pool_1::ap_const_lv2_2 = "10";
const sc_lv<2> pool_1::ap_const_lv2_1 = "1";
const sc_lv<32> pool_1::ap_const_lv32_A = "1010";
const sc_lv<15> pool_1::ap_const_lv15_310 = "1100010000";
const sc_lv<5> pool_1::ap_const_lv5_4 = "100";
const bool pool_1::ap_const_boolean_1 = true;

pool_1::pool_1(sc_module_name name) : sc_module(name), mVcdFile(0) {
    my_net_hcmp_16ns_eOg_U10 = new my_net_hcmp_16ns_eOg<1,2,16,16,1>("my_net_hcmp_16ns_eOg_U10");
    my_net_hcmp_16ns_eOg_U10->clk(ap_clk);
    my_net_hcmp_16ns_eOg_U10->reset(ap_rst);
    my_net_hcmp_16ns_eOg_U10->din0(empty_8_reg_142);
    my_net_hcmp_16ns_eOg_U10->din1(input_r_q0);
    my_net_hcmp_16ns_eOg_U10->ce(ap_var_for_const0);
    my_net_hcmp_16ns_eOg_U10->opcode(ap_var_for_const1);
    my_net_hcmp_16ns_eOg_U10->dout(grp_fu_165_p2);
    my_net_mul_mul_5nfYi_U11 = new my_net_mul_mul_5nfYi<1,1,5,11,15>("my_net_mul_mul_5nfYi_U11");
    my_net_mul_mul_5nfYi_U11->din0(mul_ln30_fu_441_p0);
    my_net_mul_mul_5nfYi_U11->din1(mul_ln30_fu_441_p1);
    my_net_mul_mul_5nfYi_U11->dout(mul_ln30_fu_441_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln30_1_fu_277_p2);
    sensitive << ( sub_ln30_reg_466 );
    sensitive << ( zext_ln30_6_fu_273_p1 );

    SC_METHOD(thread_add_ln30_2_fu_294_p2);
    sensitive << ( mul_ln30_reg_447 );
    sensitive << ( sext_ln30_fu_290_p1 );

    SC_METHOD(thread_add_ln30_3_fu_313_p2);
    sensitive << ( mul_ln30_1_reg_453 );
    sensitive << ( sext_ln30_2_fu_309_p1 );

    SC_METHOD(thread_add_ln30_fu_304_p2);
    sensitive << ( sub_ln30_1_reg_476 );
    sensitive << ( zext_ln29_fu_257_p1 );

    SC_METHOD(thread_add_ln33_1_fu_415_p2);
    sensitive << ( zext_ln33_reg_504 );
    sensitive << ( tmp_fu_407_p3 );

    SC_METHOD(thread_add_ln33_2_fu_424_p2);
    sensitive << ( mul_ln30_reg_447 );
    sensitive << ( sext_ln33_fu_420_p1 );

    SC_METHOD(thread_add_ln33_fu_351_p2);
    sensitive << ( shl_ln30_4_reg_471 );
    sensitive << ( zext_ln31_fu_335_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln28_fu_185_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln28_fu_185_p2 );

    SC_METHOD(thread_i_fu_191_p2);
    sensitive << ( i_0_reg_98 );

    SC_METHOD(thread_icmp_ln28_fu_185_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_98 );

    SC_METHOD(thread_icmp_ln29_fu_261_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_109 );

    SC_METHOD(thread_icmp_ln31_fu_339_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( k_0_reg_131 );

    SC_METHOD(thread_icmp_ln32_fu_386_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( m_0_reg_154 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( sext_ln30_1_fu_299_p1 );
    sensitive << ( sext_ln33_1_fu_429_p1 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_j_fu_267_p2);
    sensitive << ( j_0_reg_109 );

    SC_METHOD(thread_k_fu_345_p2);
    sensitive << ( k_0_reg_131 );

    SC_METHOD(thread_m_fu_392_p2);
    sensitive << ( m_0_reg_154 );

    SC_METHOD(thread_mul_ln30_1_fu_179_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( mul_ln30_1_fu_179_p00 );

    SC_METHOD(thread_mul_ln30_1_fu_179_p00);
    sensitive << ( input_offset );

    SC_METHOD(thread_mul_ln30_1_fu_179_p2);
    sensitive << ( mul_ln30_1_fu_179_p0 );

    SC_METHOD(thread_mul_ln30_fu_441_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( mul_ln30_fu_441_p00 );

    SC_METHOD(thread_mul_ln30_fu_441_p00);
    sensitive << ( input_offset );

    SC_METHOD(thread_mul_ln30_fu_441_p1);
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( output_addr_reg_494 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( input_r_q0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( select_ln33_reg_541 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_select_ln33_fu_434_p3);
    sensitive << ( input_load_1_reg_535 );
    sensitive << ( empty_8_reg_142 );
    sensitive << ( grp_fu_165_p2 );

    SC_METHOD(thread_sext_ln30_1_fu_299_p1);
    sensitive << ( add_ln30_2_fu_294_p2 );

    SC_METHOD(thread_sext_ln30_2_fu_309_p1);
    sensitive << ( add_ln30_fu_304_p2 );

    SC_METHOD(thread_sext_ln30_3_fu_318_p1);
    sensitive << ( add_ln30_3_fu_313_p2 );

    SC_METHOD(thread_sext_ln30_fu_290_p1);
    sensitive << ( tmp_3_fu_282_p3 );

    SC_METHOD(thread_sext_ln33_1_fu_429_p1);
    sensitive << ( add_ln33_2_fu_424_p2 );

    SC_METHOD(thread_sext_ln33_fu_420_p1);
    sensitive << ( add_ln33_1_fu_415_p2 );

    SC_METHOD(thread_shl_ln30_1_fu_197_p3);
    sensitive << ( i_0_reg_98 );

    SC_METHOD(thread_shl_ln30_2_fu_209_p3);
    sensitive << ( i_0_reg_98 );

    SC_METHOD(thread_shl_ln30_3_fu_227_p3);
    sensitive << ( i_0_reg_98 );

    SC_METHOD(thread_shl_ln30_4_fu_239_p3);
    sensitive << ( i_0_reg_98 );

    SC_METHOD(thread_shl_ln33_1_fu_356_p3);
    sensitive << ( add_ln33_fu_351_p2 );

    SC_METHOD(thread_shl_ln33_2_fu_368_p3);
    sensitive << ( add_ln33_fu_351_p2 );

    SC_METHOD(thread_shl_ln_fu_323_p3);
    sensitive << ( j_0_reg_109 );

    SC_METHOD(thread_sub_ln30_1_fu_251_p2);
    sensitive << ( zext_ln30_4_fu_235_p1 );
    sensitive << ( zext_ln30_5_fu_247_p1 );

    SC_METHOD(thread_sub_ln30_fu_221_p2);
    sensitive << ( zext_ln30_fu_205_p1 );
    sensitive << ( zext_ln30_3_fu_217_p1 );

    SC_METHOD(thread_sub_ln33_fu_380_p2);
    sensitive << ( zext_ln33_1_fu_364_p1 );
    sensitive << ( zext_ln33_2_fu_376_p1 );

    SC_METHOD(thread_tmp_2_fu_398_p4);
    sensitive << ( sub_ln33_reg_517 );

    SC_METHOD(thread_tmp_3_fu_282_p3);
    sensitive << ( add_ln30_1_fu_277_p2 );

    SC_METHOD(thread_tmp_fu_407_p3);
    sensitive << ( m_0_reg_154 );
    sensitive << ( tmp_2_fu_398_p4 );

    SC_METHOD(thread_zext_ln29_fu_257_p1);
    sensitive << ( j_0_reg_109 );

    SC_METHOD(thread_zext_ln30_3_fu_217_p1);
    sensitive << ( shl_ln30_2_fu_209_p3 );

    SC_METHOD(thread_zext_ln30_4_fu_235_p1);
    sensitive << ( shl_ln30_3_fu_227_p3 );

    SC_METHOD(thread_zext_ln30_5_fu_247_p1);
    sensitive << ( shl_ln30_4_fu_239_p3 );

    SC_METHOD(thread_zext_ln30_6_fu_273_p1);
    sensitive << ( j_0_reg_109 );

    SC_METHOD(thread_zext_ln30_fu_205_p1);
    sensitive << ( shl_ln30_1_fu_197_p3 );

    SC_METHOD(thread_zext_ln31_fu_335_p1);
    sensitive << ( k_0_reg_131 );

    SC_METHOD(thread_zext_ln33_1_fu_364_p1);
    sensitive << ( shl_ln33_1_fu_356_p3 );

    SC_METHOD(thread_zext_ln33_2_fu_376_p1);
    sensitive << ( shl_ln33_2_fu_368_p3 );

    SC_METHOD(thread_zext_ln33_fu_331_p1);
    sensitive << ( shl_ln_fu_323_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln28_fu_185_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln29_fu_261_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln31_fu_339_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln32_fu_386_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pool_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, input_offset, "(port)input_offset");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, mul_ln30_fu_441_p2, "mul_ln30_fu_441_p2");
    sc_trace(mVcdFile, mul_ln30_reg_447, "mul_ln30_reg_447");
    sc_trace(mVcdFile, mul_ln30_1_fu_179_p2, "mul_ln30_1_fu_179_p2");
    sc_trace(mVcdFile, mul_ln30_1_reg_453, "mul_ln30_1_reg_453");
    sc_trace(mVcdFile, i_fu_191_p2, "i_fu_191_p2");
    sc_trace(mVcdFile, i_reg_461, "i_reg_461");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, sub_ln30_fu_221_p2, "sub_ln30_fu_221_p2");
    sc_trace(mVcdFile, sub_ln30_reg_466, "sub_ln30_reg_466");
    sc_trace(mVcdFile, icmp_ln28_fu_185_p2, "icmp_ln28_fu_185_p2");
    sc_trace(mVcdFile, shl_ln30_4_fu_239_p3, "shl_ln30_4_fu_239_p3");
    sc_trace(mVcdFile, shl_ln30_4_reg_471, "shl_ln30_4_reg_471");
    sc_trace(mVcdFile, sub_ln30_1_fu_251_p2, "sub_ln30_1_fu_251_p2");
    sc_trace(mVcdFile, sub_ln30_1_reg_476, "sub_ln30_1_reg_476");
    sc_trace(mVcdFile, j_fu_267_p2, "j_fu_267_p2");
    sc_trace(mVcdFile, j_reg_484, "j_reg_484");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln29_fu_261_p2, "icmp_ln29_fu_261_p2");
    sc_trace(mVcdFile, output_addr_reg_494, "output_addr_reg_494");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, zext_ln33_fu_331_p1, "zext_ln33_fu_331_p1");
    sc_trace(mVcdFile, zext_ln33_reg_504, "zext_ln33_reg_504");
    sc_trace(mVcdFile, k_fu_345_p2, "k_fu_345_p2");
    sc_trace(mVcdFile, k_reg_512, "k_reg_512");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, sub_ln33_fu_380_p2, "sub_ln33_fu_380_p2");
    sc_trace(mVcdFile, sub_ln33_reg_517, "sub_ln33_reg_517");
    sc_trace(mVcdFile, icmp_ln31_fu_339_p2, "icmp_ln31_fu_339_p2");
    sc_trace(mVcdFile, m_fu_392_p2, "m_fu_392_p2");
    sc_trace(mVcdFile, m_reg_525, "m_reg_525");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, icmp_ln32_fu_386_p2, "icmp_ln32_fu_386_p2");
    sc_trace(mVcdFile, input_load_1_reg_535, "input_load_1_reg_535");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, select_ln33_fu_434_p3, "select_ln33_fu_434_p3");
    sc_trace(mVcdFile, select_ln33_reg_541, "select_ln33_reg_541");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, i_0_reg_98, "i_0_reg_98");
    sc_trace(mVcdFile, j_0_reg_109, "j_0_reg_109");
    sc_trace(mVcdFile, empty_6_reg_121, "empty_6_reg_121");
    sc_trace(mVcdFile, k_0_reg_131, "k_0_reg_131");
    sc_trace(mVcdFile, empty_8_reg_142, "empty_8_reg_142");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, m_0_reg_154, "m_0_reg_154");
    sc_trace(mVcdFile, sext_ln30_1_fu_299_p1, "sext_ln30_1_fu_299_p1");
    sc_trace(mVcdFile, sext_ln30_3_fu_318_p1, "sext_ln30_3_fu_318_p1");
    sc_trace(mVcdFile, sext_ln33_1_fu_429_p1, "sext_ln33_1_fu_429_p1");
    sc_trace(mVcdFile, mul_ln30_1_fu_179_p0, "mul_ln30_1_fu_179_p0");
    sc_trace(mVcdFile, shl_ln30_1_fu_197_p3, "shl_ln30_1_fu_197_p3");
    sc_trace(mVcdFile, shl_ln30_2_fu_209_p3, "shl_ln30_2_fu_209_p3");
    sc_trace(mVcdFile, zext_ln30_fu_205_p1, "zext_ln30_fu_205_p1");
    sc_trace(mVcdFile, zext_ln30_3_fu_217_p1, "zext_ln30_3_fu_217_p1");
    sc_trace(mVcdFile, shl_ln30_3_fu_227_p3, "shl_ln30_3_fu_227_p3");
    sc_trace(mVcdFile, zext_ln30_4_fu_235_p1, "zext_ln30_4_fu_235_p1");
    sc_trace(mVcdFile, zext_ln30_5_fu_247_p1, "zext_ln30_5_fu_247_p1");
    sc_trace(mVcdFile, zext_ln30_6_fu_273_p1, "zext_ln30_6_fu_273_p1");
    sc_trace(mVcdFile, add_ln30_1_fu_277_p2, "add_ln30_1_fu_277_p2");
    sc_trace(mVcdFile, tmp_3_fu_282_p3, "tmp_3_fu_282_p3");
    sc_trace(mVcdFile, sext_ln30_fu_290_p1, "sext_ln30_fu_290_p1");
    sc_trace(mVcdFile, add_ln30_2_fu_294_p2, "add_ln30_2_fu_294_p2");
    sc_trace(mVcdFile, zext_ln29_fu_257_p1, "zext_ln29_fu_257_p1");
    sc_trace(mVcdFile, add_ln30_fu_304_p2, "add_ln30_fu_304_p2");
    sc_trace(mVcdFile, sext_ln30_2_fu_309_p1, "sext_ln30_2_fu_309_p1");
    sc_trace(mVcdFile, add_ln30_3_fu_313_p2, "add_ln30_3_fu_313_p2");
    sc_trace(mVcdFile, shl_ln_fu_323_p3, "shl_ln_fu_323_p3");
    sc_trace(mVcdFile, zext_ln31_fu_335_p1, "zext_ln31_fu_335_p1");
    sc_trace(mVcdFile, add_ln33_fu_351_p2, "add_ln33_fu_351_p2");
    sc_trace(mVcdFile, shl_ln33_1_fu_356_p3, "shl_ln33_1_fu_356_p3");
    sc_trace(mVcdFile, shl_ln33_2_fu_368_p3, "shl_ln33_2_fu_368_p3");
    sc_trace(mVcdFile, zext_ln33_1_fu_364_p1, "zext_ln33_1_fu_364_p1");
    sc_trace(mVcdFile, zext_ln33_2_fu_376_p1, "zext_ln33_2_fu_376_p1");
    sc_trace(mVcdFile, tmp_2_fu_398_p4, "tmp_2_fu_398_p4");
    sc_trace(mVcdFile, tmp_fu_407_p3, "tmp_fu_407_p3");
    sc_trace(mVcdFile, add_ln33_1_fu_415_p2, "add_ln33_1_fu_415_p2");
    sc_trace(mVcdFile, sext_ln33_fu_420_p1, "sext_ln33_fu_420_p1");
    sc_trace(mVcdFile, add_ln33_2_fu_424_p2, "add_ln33_2_fu_424_p2");
    sc_trace(mVcdFile, grp_fu_165_p2, "grp_fu_165_p2");
    sc_trace(mVcdFile, mul_ln30_fu_441_p0, "mul_ln30_fu_441_p0");
    sc_trace(mVcdFile, mul_ln30_fu_441_p1, "mul_ln30_fu_441_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, mul_ln30_1_fu_179_p00, "mul_ln30_1_fu_179_p00");
    sc_trace(mVcdFile, mul_ln30_fu_441_p00, "mul_ln30_fu_441_p00");
#endif

    }
}

pool_1::~pool_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete my_net_hcmp_16ns_eOg_U10;
    delete my_net_mul_mul_5nfYi_U11;
}

void pool_1::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void pool_1::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv5_4;
}

void pool_1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(icmp_ln32_fu_386_p2.read(), ap_const_lv1_1))) {
        empty_6_reg_121 = empty_8_reg_142.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        empty_6_reg_121 = input_r_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_fu_339_p2.read()))) {
        empty_8_reg_142 = empty_6_reg_121.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        empty_8_reg_142 = select_ln33_reg_541.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln29_fu_261_p2.read(), ap_const_lv1_1))) {
        i_0_reg_98 = i_reg_461.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_98 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln31_fu_339_p2.read(), ap_const_lv1_1))) {
        j_0_reg_109 = j_reg_484.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln28_fu_185_p2.read(), ap_const_lv1_0))) {
        j_0_reg_109 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(icmp_ln32_fu_386_p2.read(), ap_const_lv1_1))) {
        k_0_reg_131 = k_reg_512.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        k_0_reg_131 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_fu_339_p2.read()))) {
        m_0_reg_154 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        m_0_reg_154 = m_reg_525.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_461 = i_fu_191_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        input_load_1_reg_535 = input_r_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_484 = j_fu_267_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        k_reg_512 = k_fu_345_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        m_reg_525 = m_fu_392_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        mul_ln30_1_reg_453 = mul_ln30_1_fu_179_p2.read();
        mul_ln30_reg_447 = mul_ln30_fu_441_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln29_fu_261_p2.read()))) {
        output_addr_reg_494 =  (sc_lv<12>) (sext_ln30_3_fu_318_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        select_ln33_reg_541 = select_ln33_fu_434_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln28_fu_185_p2.read(), ap_const_lv1_0))) {
        shl_ln30_4_reg_471 = shl_ln30_4_fu_239_p3.read();
        sub_ln30_1_reg_476 = sub_ln30_1_fu_251_p2.read();
        sub_ln30_reg_466 = sub_ln30_fu_221_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_fu_339_p2.read()))) {
        sub_ln33_reg_517 = sub_ln33_fu_380_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        zext_ln33_reg_504 = zext_ln33_fu_331_p1.read();
    }
}

void pool_1::thread_add_ln30_1_fu_277_p2() {
    add_ln30_1_fu_277_p2 = (!sub_ln30_reg_466.read().is_01() || !zext_ln30_6_fu_273_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(sub_ln30_reg_466.read()) + sc_biguint<10>(zext_ln30_6_fu_273_p1.read()));
}

void pool_1::thread_add_ln30_2_fu_294_p2() {
    add_ln30_2_fu_294_p2 = (!sext_ln30_fu_290_p1.read().is_01() || !mul_ln30_reg_447.read().is_01())? sc_lv<15>(): (sc_bigint<15>(sext_ln30_fu_290_p1.read()) + sc_biguint<15>(mul_ln30_reg_447.read()));
}

void pool_1::thread_add_ln30_3_fu_313_p2() {
    add_ln30_3_fu_313_p2 = (!sext_ln30_2_fu_309_p1.read().is_01() || !mul_ln30_1_reg_453.read().is_01())? sc_lv<13>(): (sc_bigint<13>(sext_ln30_2_fu_309_p1.read()) + sc_biguint<13>(mul_ln30_1_reg_453.read()));
}

void pool_1::thread_add_ln30_fu_304_p2() {
    add_ln30_fu_304_p2 = (!zext_ln29_fu_257_p1.read().is_01() || !sub_ln30_1_reg_476.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln29_fu_257_p1.read()) + sc_biguint<9>(sub_ln30_1_reg_476.read()));
}

void pool_1::thread_add_ln33_1_fu_415_p2() {
    add_ln33_1_fu_415_p2 = (!zext_ln33_reg_504.read().is_01() || !tmp_fu_407_p3.read().is_01())? sc_lv<11>(): (sc_biguint<11>(zext_ln33_reg_504.read()) + sc_biguint<11>(tmp_fu_407_p3.read()));
}

void pool_1::thread_add_ln33_2_fu_424_p2() {
    add_ln33_2_fu_424_p2 = (!sext_ln33_fu_420_p1.read().is_01() || !mul_ln30_reg_447.read().is_01())? sc_lv<15>(): (sc_bigint<15>(sext_ln33_fu_420_p1.read()) + sc_biguint<15>(mul_ln30_reg_447.read()));
}

void pool_1::thread_add_ln33_fu_351_p2() {
    add_ln33_fu_351_p2 = (!zext_ln31_fu_335_p1.read().is_01() || !shl_ln30_4_reg_471.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln31_fu_335_p1.read()) + sc_biguint<5>(shl_ln30_4_reg_471.read()));
}

void pool_1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void pool_1::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void pool_1::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void pool_1::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void pool_1::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void pool_1::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void pool_1::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void pool_1::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void pool_1::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void pool_1::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln28_fu_185_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void pool_1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void pool_1::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln28_fu_185_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void pool_1::thread_i_fu_191_p2() {
    i_fu_191_p2 = (!i_0_reg_98.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_0_reg_98.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void pool_1::thread_icmp_ln28_fu_185_p2() {
    icmp_ln28_fu_185_p2 = (!i_0_reg_98.read().is_01() || !ap_const_lv4_E.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_98.read() == ap_const_lv4_E);
}

void pool_1::thread_icmp_ln29_fu_261_p2() {
    icmp_ln29_fu_261_p2 = (!j_0_reg_109.read().is_01() || !ap_const_lv4_E.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_109.read() == ap_const_lv4_E);
}

void pool_1::thread_icmp_ln31_fu_339_p2() {
    icmp_ln31_fu_339_p2 = (!k_0_reg_131.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(k_0_reg_131.read() == ap_const_lv2_2);
}

void pool_1::thread_icmp_ln32_fu_386_p2() {
    icmp_ln32_fu_386_p2 = (!m_0_reg_154.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(m_0_reg_154.read() == ap_const_lv2_2);
}

void pool_1::thread_input_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        input_r_address0 =  (sc_lv<14>) (sext_ln33_1_fu_429_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        input_r_address0 =  (sc_lv<14>) (sext_ln30_1_fu_299_p1.read());
    } else {
        input_r_address0 = "XXXXXXXXXXXXXX";
    }
}

void pool_1::thread_input_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void pool_1::thread_j_fu_267_p2() {
    j_fu_267_p2 = (!j_0_reg_109.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_0_reg_109.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void pool_1::thread_k_fu_345_p2() {
    k_fu_345_p2 = (!k_0_reg_131.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(k_0_reg_131.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void pool_1::thread_m_fu_392_p2() {
    m_fu_392_p2 = (!m_0_reg_154.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(m_0_reg_154.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void pool_1::thread_mul_ln30_1_fu_179_p0() {
    mul_ln30_1_fu_179_p0 =  (sc_lv<5>) (mul_ln30_1_fu_179_p00.read());
}

void pool_1::thread_mul_ln30_1_fu_179_p00() {
    mul_ln30_1_fu_179_p00 = esl_zext<13,5>(input_offset.read());
}

void pool_1::thread_mul_ln30_1_fu_179_p2() {
    mul_ln30_1_fu_179_p2 = (!mul_ln30_1_fu_179_p0.read().is_01() || !ap_const_lv13_C4.is_01())? sc_lv<13>(): sc_biguint<5>(mul_ln30_1_fu_179_p0.read()) * sc_biguint<13>(ap_const_lv13_C4);
}

void pool_1::thread_mul_ln30_fu_441_p0() {
    mul_ln30_fu_441_p0 =  (sc_lv<5>) (mul_ln30_fu_441_p00.read());
}

void pool_1::thread_mul_ln30_fu_441_p00() {
    mul_ln30_fu_441_p00 = esl_zext<15,5>(input_offset.read());
}

void pool_1::thread_mul_ln30_fu_441_p1() {
    mul_ln30_fu_441_p1 =  (sc_lv<11>) (ap_const_lv15_310);
}

void pool_1::thread_output_r_address0() {
    output_r_address0 = output_addr_reg_494.read();
}

void pool_1::thread_output_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void pool_1::thread_output_r_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        output_r_d0 = select_ln33_reg_541.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        output_r_d0 = input_r_q0.read();
    } else {
        output_r_d0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void pool_1::thread_output_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void pool_1::thread_select_ln33_fu_434_p3() {
    select_ln33_fu_434_p3 = (!grp_fu_165_p2.read()[0].is_01())? sc_lv<16>(): ((grp_fu_165_p2.read()[0].to_bool())? input_load_1_reg_535.read(): empty_8_reg_142.read());
}

void pool_1::thread_sext_ln30_1_fu_299_p1() {
    sext_ln30_1_fu_299_p1 = esl_sext<64,15>(add_ln30_2_fu_294_p2.read());
}

void pool_1::thread_sext_ln30_2_fu_309_p1() {
    sext_ln30_2_fu_309_p1 = esl_sext<13,9>(add_ln30_fu_304_p2.read());
}

void pool_1::thread_sext_ln30_3_fu_318_p1() {
    sext_ln30_3_fu_318_p1 = esl_sext<64,13>(add_ln30_3_fu_313_p2.read());
}

void pool_1::thread_sext_ln30_fu_290_p1() {
    sext_ln30_fu_290_p1 = esl_sext<15,11>(tmp_3_fu_282_p3.read());
}

void pool_1::thread_sext_ln33_1_fu_429_p1() {
    sext_ln33_1_fu_429_p1 = esl_sext<64,15>(add_ln33_2_fu_424_p2.read());
}

void pool_1::thread_sext_ln33_fu_420_p1() {
    sext_ln33_fu_420_p1 = esl_sext<15,11>(add_ln33_1_fu_415_p2.read());
}

void pool_1::thread_shl_ln30_1_fu_197_p3() {
    shl_ln30_1_fu_197_p3 = esl_concat<4,5>(i_0_reg_98.read(), ap_const_lv5_0);
}

void pool_1::thread_shl_ln30_2_fu_209_p3() {
    shl_ln30_2_fu_209_p3 = esl_concat<4,2>(i_0_reg_98.read(), ap_const_lv2_0);
}

void pool_1::thread_shl_ln30_3_fu_227_p3() {
    shl_ln30_3_fu_227_p3 = esl_concat<4,4>(i_0_reg_98.read(), ap_const_lv4_0);
}

void pool_1::thread_shl_ln30_4_fu_239_p3() {
    shl_ln30_4_fu_239_p3 = esl_concat<4,1>(i_0_reg_98.read(), ap_const_lv1_0);
}

void pool_1::thread_shl_ln33_1_fu_356_p3() {
    shl_ln33_1_fu_356_p3 = esl_concat<5,5>(add_ln33_fu_351_p2.read(), ap_const_lv5_0);
}

void pool_1::thread_shl_ln33_2_fu_368_p3() {
    shl_ln33_2_fu_368_p3 = esl_concat<5,2>(add_ln33_fu_351_p2.read(), ap_const_lv2_0);
}

void pool_1::thread_shl_ln_fu_323_p3() {
    shl_ln_fu_323_p3 = esl_concat<4,1>(j_0_reg_109.read(), ap_const_lv1_0);
}

void pool_1::thread_sub_ln30_1_fu_251_p2() {
    sub_ln30_1_fu_251_p2 = (!zext_ln30_4_fu_235_p1.read().is_01() || !zext_ln30_5_fu_247_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln30_4_fu_235_p1.read()) - sc_biguint<9>(zext_ln30_5_fu_247_p1.read()));
}

void pool_1::thread_sub_ln30_fu_221_p2() {
    sub_ln30_fu_221_p2 = (!zext_ln30_fu_205_p1.read().is_01() || !zext_ln30_3_fu_217_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln30_fu_205_p1.read()) - sc_biguint<10>(zext_ln30_3_fu_217_p1.read()));
}

void pool_1::thread_sub_ln33_fu_380_p2() {
    sub_ln33_fu_380_p2 = (!zext_ln33_1_fu_364_p1.read().is_01() || !zext_ln33_2_fu_376_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(zext_ln33_1_fu_364_p1.read()) - sc_biguint<11>(zext_ln33_2_fu_376_p1.read()));
}

void pool_1::thread_tmp_2_fu_398_p4() {
    tmp_2_fu_398_p4 = sub_ln33_reg_517.read().range(10, 2);
}

void pool_1::thread_tmp_3_fu_282_p3() {
    tmp_3_fu_282_p3 = esl_concat<10,1>(add_ln30_1_fu_277_p2.read(), ap_const_lv1_0);
}

void pool_1::thread_tmp_fu_407_p3() {
    tmp_fu_407_p3 = esl_concat<9,2>(tmp_2_fu_398_p4.read(), m_0_reg_154.read());
}

void pool_1::thread_zext_ln29_fu_257_p1() {
    zext_ln29_fu_257_p1 = esl_zext<9,4>(j_0_reg_109.read());
}

void pool_1::thread_zext_ln30_3_fu_217_p1() {
    zext_ln30_3_fu_217_p1 = esl_zext<10,6>(shl_ln30_2_fu_209_p3.read());
}

void pool_1::thread_zext_ln30_4_fu_235_p1() {
    zext_ln30_4_fu_235_p1 = esl_zext<9,8>(shl_ln30_3_fu_227_p3.read());
}

void pool_1::thread_zext_ln30_5_fu_247_p1() {
    zext_ln30_5_fu_247_p1 = esl_zext<9,5>(shl_ln30_4_fu_239_p3.read());
}

void pool_1::thread_zext_ln30_6_fu_273_p1() {
    zext_ln30_6_fu_273_p1 = esl_zext<10,4>(j_0_reg_109.read());
}

void pool_1::thread_zext_ln30_fu_205_p1() {
    zext_ln30_fu_205_p1 = esl_zext<10,9>(shl_ln30_1_fu_197_p3.read());
}

void pool_1::thread_zext_ln31_fu_335_p1() {
    zext_ln31_fu_335_p1 = esl_zext<5,2>(k_0_reg_131.read());
}

void pool_1::thread_zext_ln33_1_fu_364_p1() {
    zext_ln33_1_fu_364_p1 = esl_zext<11,10>(shl_ln33_1_fu_356_p3.read());
}

void pool_1::thread_zext_ln33_2_fu_376_p1() {
    zext_ln33_2_fu_376_p1 = esl_zext<11,7>(shl_ln33_2_fu_368_p3.read());
}

void pool_1::thread_zext_ln33_fu_331_p1() {
    zext_ln33_fu_331_p1 = esl_zext<11,5>(shl_ln_fu_323_p3.read());
}

void pool_1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln28_fu_185_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln29_fu_261_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln31_fu_339_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(icmp_ln32_fu_386_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<9>) ("XXXXXXXXX");
            break;
    }
}

}

