// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pool_1_HH_
#define _pool_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "my_net_hcmp_16ns_eOg.h"
#include "my_net_mul_mul_5nfYi.h"

namespace ap_rtl {

struct pool_1 : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<14> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<16> > input_r_q0;
    sc_in< sc_lv<5> > input_offset;
    sc_out< sc_lv<12> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<16> > output_r_d0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    pool_1(sc_module_name name);
    SC_HAS_PROCESS(pool_1);

    ~pool_1();

    sc_trace_file* mVcdFile;

    my_net_hcmp_16ns_eOg<1,2,16,16,1>* my_net_hcmp_16ns_eOg_U10;
    my_net_mul_mul_5nfYi<1,1,5,11,15>* my_net_mul_mul_5nfYi_U11;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<15> > mul_ln30_fu_441_p2;
    sc_signal< sc_lv<15> > mul_ln30_reg_447;
    sc_signal< sc_lv<13> > mul_ln30_1_fu_179_p2;
    sc_signal< sc_lv<13> > mul_ln30_1_reg_453;
    sc_signal< sc_lv<4> > i_fu_191_p2;
    sc_signal< sc_lv<4> > i_reg_461;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<10> > sub_ln30_fu_221_p2;
    sc_signal< sc_lv<10> > sub_ln30_reg_466;
    sc_signal< sc_lv<1> > icmp_ln28_fu_185_p2;
    sc_signal< sc_lv<5> > shl_ln30_4_fu_239_p3;
    sc_signal< sc_lv<5> > shl_ln30_4_reg_471;
    sc_signal< sc_lv<9> > sub_ln30_1_fu_251_p2;
    sc_signal< sc_lv<9> > sub_ln30_1_reg_476;
    sc_signal< sc_lv<4> > j_fu_267_p2;
    sc_signal< sc_lv<4> > j_reg_484;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln29_fu_261_p2;
    sc_signal< sc_lv<12> > output_addr_reg_494;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<11> > zext_ln33_fu_331_p1;
    sc_signal< sc_lv<11> > zext_ln33_reg_504;
    sc_signal< sc_lv<2> > k_fu_345_p2;
    sc_signal< sc_lv<2> > k_reg_512;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<11> > sub_ln33_fu_380_p2;
    sc_signal< sc_lv<11> > sub_ln33_reg_517;
    sc_signal< sc_lv<1> > icmp_ln31_fu_339_p2;
    sc_signal< sc_lv<2> > m_fu_392_p2;
    sc_signal< sc_lv<2> > m_reg_525;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln32_fu_386_p2;
    sc_signal< sc_lv<16> > input_load_1_reg_535;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<16> > select_ln33_fu_434_p3;
    sc_signal< sc_lv<16> > select_ln33_reg_541;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<4> > i_0_reg_98;
    sc_signal< sc_lv<4> > j_0_reg_109;
    sc_signal< sc_lv<16> > empty_6_reg_121;
    sc_signal< sc_lv<2> > k_0_reg_131;
    sc_signal< sc_lv<16> > empty_8_reg_142;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<2> > m_0_reg_154;
    sc_signal< sc_lv<64> > sext_ln30_1_fu_299_p1;
    sc_signal< sc_lv<64> > sext_ln30_3_fu_318_p1;
    sc_signal< sc_lv<64> > sext_ln33_1_fu_429_p1;
    sc_signal< sc_lv<5> > mul_ln30_1_fu_179_p0;
    sc_signal< sc_lv<9> > shl_ln30_1_fu_197_p3;
    sc_signal< sc_lv<6> > shl_ln30_2_fu_209_p3;
    sc_signal< sc_lv<10> > zext_ln30_fu_205_p1;
    sc_signal< sc_lv<10> > zext_ln30_3_fu_217_p1;
    sc_signal< sc_lv<8> > shl_ln30_3_fu_227_p3;
    sc_signal< sc_lv<9> > zext_ln30_4_fu_235_p1;
    sc_signal< sc_lv<9> > zext_ln30_5_fu_247_p1;
    sc_signal< sc_lv<10> > zext_ln30_6_fu_273_p1;
    sc_signal< sc_lv<10> > add_ln30_1_fu_277_p2;
    sc_signal< sc_lv<11> > tmp_3_fu_282_p3;
    sc_signal< sc_lv<15> > sext_ln30_fu_290_p1;
    sc_signal< sc_lv<15> > add_ln30_2_fu_294_p2;
    sc_signal< sc_lv<9> > zext_ln29_fu_257_p1;
    sc_signal< sc_lv<9> > add_ln30_fu_304_p2;
    sc_signal< sc_lv<13> > sext_ln30_2_fu_309_p1;
    sc_signal< sc_lv<13> > add_ln30_3_fu_313_p2;
    sc_signal< sc_lv<5> > shl_ln_fu_323_p3;
    sc_signal< sc_lv<5> > zext_ln31_fu_335_p1;
    sc_signal< sc_lv<5> > add_ln33_fu_351_p2;
    sc_signal< sc_lv<10> > shl_ln33_1_fu_356_p3;
    sc_signal< sc_lv<7> > shl_ln33_2_fu_368_p3;
    sc_signal< sc_lv<11> > zext_ln33_1_fu_364_p1;
    sc_signal< sc_lv<11> > zext_ln33_2_fu_376_p1;
    sc_signal< sc_lv<9> > tmp_2_fu_398_p4;
    sc_signal< sc_lv<11> > tmp_fu_407_p3;
    sc_signal< sc_lv<11> > add_ln33_1_fu_415_p2;
    sc_signal< sc_lv<15> > sext_ln33_fu_420_p1;
    sc_signal< sc_lv<15> > add_ln33_2_fu_424_p2;
    sc_signal< sc_lv<1> > grp_fu_165_p2;
    sc_signal< sc_lv<5> > mul_ln30_fu_441_p0;
    sc_signal< sc_lv<11> > mul_ln30_fu_441_p1;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    sc_signal< sc_lv<13> > mul_ln30_1_fu_179_p00;
    sc_signal< sc_lv<15> > mul_ln30_fu_441_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<13> ap_const_lv13_C4;
    static const sc_lv<4> ap_const_lv4_E;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<15> ap_const_lv15_310;
    static const sc_lv<5> ap_const_lv5_4;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln30_1_fu_277_p2();
    void thread_add_ln30_2_fu_294_p2();
    void thread_add_ln30_3_fu_313_p2();
    void thread_add_ln30_fu_304_p2();
    void thread_add_ln33_1_fu_415_p2();
    void thread_add_ln33_2_fu_424_p2();
    void thread_add_ln33_fu_351_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_fu_191_p2();
    void thread_icmp_ln28_fu_185_p2();
    void thread_icmp_ln29_fu_261_p2();
    void thread_icmp_ln31_fu_339_p2();
    void thread_icmp_ln32_fu_386_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_j_fu_267_p2();
    void thread_k_fu_345_p2();
    void thread_m_fu_392_p2();
    void thread_mul_ln30_1_fu_179_p0();
    void thread_mul_ln30_1_fu_179_p00();
    void thread_mul_ln30_1_fu_179_p2();
    void thread_mul_ln30_fu_441_p0();
    void thread_mul_ln30_fu_441_p00();
    void thread_mul_ln30_fu_441_p1();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_select_ln33_fu_434_p3();
    void thread_sext_ln30_1_fu_299_p1();
    void thread_sext_ln30_2_fu_309_p1();
    void thread_sext_ln30_3_fu_318_p1();
    void thread_sext_ln30_fu_290_p1();
    void thread_sext_ln33_1_fu_429_p1();
    void thread_sext_ln33_fu_420_p1();
    void thread_shl_ln30_1_fu_197_p3();
    void thread_shl_ln30_2_fu_209_p3();
    void thread_shl_ln30_3_fu_227_p3();
    void thread_shl_ln30_4_fu_239_p3();
    void thread_shl_ln33_1_fu_356_p3();
    void thread_shl_ln33_2_fu_368_p3();
    void thread_shl_ln_fu_323_p3();
    void thread_sub_ln30_1_fu_251_p2();
    void thread_sub_ln30_fu_221_p2();
    void thread_sub_ln33_fu_380_p2();
    void thread_tmp_2_fu_398_p4();
    void thread_tmp_3_fu_282_p3();
    void thread_tmp_fu_407_p3();
    void thread_zext_ln29_fu_257_p1();
    void thread_zext_ln30_3_fu_217_p1();
    void thread_zext_ln30_4_fu_235_p1();
    void thread_zext_ln30_5_fu_247_p1();
    void thread_zext_ln30_6_fu_273_p1();
    void thread_zext_ln30_fu_205_p1();
    void thread_zext_ln31_fu_335_p1();
    void thread_zext_ln33_1_fu_364_p1();
    void thread_zext_ln33_2_fu_376_p1();
    void thread_zext_ln33_fu_331_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
